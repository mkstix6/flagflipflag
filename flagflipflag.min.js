/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'

	// import the data
	const countries = __webpack_require__(1)
	const Isotope = __webpack_require__(2)
	const hexToHsl = __webpack_require__(15)

	function removeFirstCharacter (hex) {
	  return hex.substr(1)
	}

	// Object from file : flagdata.js
	const makeFlag = (x) => {
	  let colors = x.colors
	  let name = x.name
	  let image = x.url

	  colors = colors.map(x => {
	    x.hsl = hexToHsl(x.hex)
	    x.hue = hexToHsl(x.hex)[0]
	    x.light = hexToHsl(x.hex)[2]
	    x.huebucket = () => {
	      if (x.light > 80) {
	        return 'w'
	      } else if (x.light < 20) {
	        return 'b'
	      } else {
	        return Math.round(((hexToHsl(x.hex)[0] + 55) % 360) / 60)
	      }
	    }
	    x.huetxtcolor = parseInt(removeFirstCharacter(x.hex), 16) > 12000000 ? 'black' : 'white'
	    return x
	  })

	  return {
	    get flagMarkup () {
	      return `<div class="flag ${
	          colors.reduce((prev, color) => {
	            return color.percent > 3 ? `${prev} huebucket${color.huebucket()}` : `${prev}`
	          }, ``)
	      }">
	      <div class="flag__name">${name}</div>
	      <img class="flag__image" width="20" src="${image}">
	      <div class="flag__colors">
	        ${
	          colors.reduce((prev, color) => {
	            return color.percent > 3 ? `${prev}<div class="flag__color colorswatch huebucket huebucket${color.huebucket()}" data-filter="huebucket${color.huebucket()}" data-category="huebucket${color.huebucket()}" data-huebucket="huebucket${color.huebucket()}" style="padding:0.2em;color:${color.huetxtcolor};background-color: ${color.hex};"><span class="hideit">${color.percent} | ${color.huebucket()} </span><span class="hideit percent${color.huebucket()}">${1 / color.percent}</span><span class="hideit ${color.name}">${color.name}</span></div>` : `${prev}`
	          }, ``)
	        }
	      </div>
	    </div>`
	    }
	  }
	}
	// width:${Math.sqrt((color.percent * 100 / Math.PI))}px;height:${Math.sqrt((color.percent * 100 / Math.PI))}px;

	// get the json type object into an array of data objects
	const countriesArray = Object.values(countries)
	// make full objects from the data objects
	const flags = countriesArray.map(x => {
	  return makeFlag(x)
	})
	// make a div.flags
	let flagsDiv = document.createElement('div')
	flagsDiv.classList.add('flags')
	// fill div.flags with .flag elements from their objects
	flags.map(x => flagsDiv.insertAdjacentHTML('beforeend', x.flagMarkup))
	// add all .flags with .flag elements to the DOM
	document.body.appendChild(flagsDiv)

	var elem = document.querySelector('.flags')
	var iso = new Isotope(elem, {
	  // options
	  sortAscending: true,
	  itemSelector: '.flag',
	  layoutMode: 'fitRows',
	  getSortData: {
	    percentw: '.percentw',
	    percent1: '.percent1',
	    percent2: '.percent2',
	    percent3: '.percent3',
	    percent4: '.percent4',
	    percent5: '.percent5',
	    percent6: '.percent6',
	    percentb: '.percentb'
	  }
	})

	// iso.sortBy('country')

	// bind filter button click
	var filtersElem = document.querySelector('.filters-button-group')
	filtersElem.addEventListener('click', function (event) {
	  // only work with buttons
	  // if (!matchesSelector(event.target, 'button')) {
	  //   return
	  // }
	  var filterValue = event.target.getAttribute('data-filter')
	  // use matching filter function
	  iso.arrange({ filter: filterValue })
	})

	// bind sort button click
	var sortByGroup = document.querySelector('.filters-button-group')
	sortByGroup.addEventListener('click', function (event) {
	  // only button clicks
	  // if ( !matchesSelector( event.target, '.button' ) ) {
	    // return;
	  // }
	  var sortValue = event.target.getAttribute('data-sort-by')
	  console.log(sortValue)
	  iso.arrange({ sortBy: sortValue })
	})


/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = [{
	  'name': 'Afghanistan',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Flag_of_Afghanistan.svg/150px-Flag_of_Afghanistan.svg.png',
	  'colors': [{
	    'hex': '#000000',
	    'percent': 33.33
	  }, {
	    'hex': '#009900',
	    'percent': 33.33
	  }, {
	    'hex': '#BF0000',
	    'percent': 24.99
	  }, {
	    'hex': '#D2534D',
	    'percent': 3.57
	  }, {
	    'hex': '#DB8B70',
	    'percent': 2.54
	  }, {
	    'hex': '#F4E5D7',
	    'percent': 1.51
	  }]
	}, {
	  'name': 'Albania',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/Flag_of_Albania.svg/140px-Flag_of_Albania.svg.png',
	  'colors': [{
	    'hex': '#E41E20',
	    'percent': 85.78
	  }, {
	    'hex': '#020000',
	    'percent': 11.74
	  }, {
	    'hex': '#6F0F10',
	    'percent': 1.75
	  }, {
	    'hex': '#AF1719',
	    'percent': 0.74
	  }]
	}, {
	  'name': 'Algeria',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/77/Flag_of_Algeria.svg/150px-Flag_of_Algeria.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 47.72
	  }, {
	    'hex': '#006233',
	    'percent': 45.89
	  }, {
	    'hex': '#D21034',
	    'percent': 5.49
	  }, {
	    'hex': '#EC99A8',
	    'percent': 0.43
	  }, {
	    'hex': '#902A34',
	    'percent': 0.13
	  }, {
	    'hex': '#DD4D68',
	    'percent': 0.11
	  }]
	}, {
	  'name': 'Andorra',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/19/Flag_of_Andorra.svg/143px-Flag_of_Andorra.svg.png',
	  'colors': [{
	    'hex': '#D0103A',
	    'percent': 31.49
	  }, {
	    'hex': '#0018A8',
	    'percent': 31.47
	  }, {
	    'hex': '#FDDE00',
	    'percent': 26.23
	  }, {
	    'hex': '#BBA373',
	    'percent': 6.62
	  }, {
	    'hex': '#D9422D',
	    'percent': 2.22
	  }, {
	    'hex': '#DFA41B',
	    'percent': 0.79
	  }]
	}, {
	  'name': 'Angola',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/9d/Flag_of_Angola.svg/150px-Flag_of_Angola.svg.png',
	  'colors': [{
	    'hex': '#CE1126',
	    'percent': 47.95
	  }, {
	    'hex': '#000000',
	    'percent': 46.69
	  }, {
	    'hex': '#F7D416',
	    'percent': 4.17
	  }, {
	    'hex': '#97820D',
	    'percent': 0.61
	  }, {
	    'hex': '#544807',
	    'percent': 0.31
	  }, {
	    'hex': '#E3711E',
	    'percent': 0.27
	  }]
	}, {
	  'name': 'Antigua and Barbuda',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/89/Flag_of_Antigua_and_Barbuda.svg/150px-Flag_of_Antigua_and_Barbuda.svg.png',
	  'colors': [{
	    'hex': '#CE1126',
	    'percent': 49.37
	  }, {
	    'hex': '#000000',
	    'percent': 24.83
	  }, {
	    'hex': '#0072C6',
	    'percent': 10.92
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 7.34
	  }, {
	    'hex': '#FBD116',
	    'percent': 5.14
	  }, {
	    'hex': '#952D54',
	    'percent': 0.13
	  }]
	}, {
	  'name': 'Argentina',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/1a/Flag_of_Argentina.svg/160px-Flag_of_Argentina.svg.png',
	  'colors': [{
	    'hex': '#74ACDF',
	    'percent': 66
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 28.63
	  }, {
	    'hex': '#D1E3F4',
	    'percent': 2.46
	  }, {
	    'hex': '#D7A454',
	    'percent': 1.71
	  }, {
	    'hex': '#DBB892',
	    'percent': 0.79
	  }, {
	    'hex': '#F3B10E',
	    'percent': 0.41
	  }]
	}, {
	  'name': 'Armenia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Flag_of_Armenia.svg/200px-Flag_of_Armenia.svg.png',
	  'colors': [{
	    'hex': '#F2A800',
	    'percent': 33
	  }, {
	    'hex': '#D90012',
	    'percent': 33
	  }, {
	    'hex': '#0033A0',
	    'percent': 32
	  }, {
	    'hex': '#50596B',
	    'percent': 1
	  }, {
	    'hex': '#482271',
	    'percent': 1
	  }]
	}, {
	  'name': 'Australia',
	  'url': 'https://upload.wikimedia.org/wikipedia/en/thumb/b/b9/Flag_of_Australia.svg/200px-Flag_of_Australia.svg.png',
	  'colors': [{
	    'hex': '#00008B',
	    'percent': 77.34
	  }, {
	    'hex': '#FEFEFE',
	    'percent': 9.37
	  }, {
	    'hex': '#FF0101',
	    'percent': 8.79
	  }, {
	    'hex': '#5656B3',
	    'percent': 1.68
	  }, {
	    'hex': '#D3D3EB',
	    'percent': 1.03
	  }, {
	    'hex': '#27279D',
	    'percent': 0.45
	  }]
	}, {
	  'name': 'Austria',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/41/Flag_of_Austria.svg/150px-Flag_of_Austria.svg.png',
	  'colors': [{
	    'hex': '#ED2939',
	    'percent': 66
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 32
	  }, {
	    'hex': '#F9B9BE',
	    'percent': 2
	  }]
	}, {
	  'name': 'Azerbaijan',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Flag_of_Azerbaijan.svg/200px-Flag_of_Azerbaijan.svg.png',
	  'colors': [{
	    'hex': '#00B9E4',
	    'percent': 33
	  }, {
	    'hex': '#3F9C35',
	    'percent': 33
	  }, {
	    'hex': '#ED2939',
	    'percent': 30.06
	  }, {
	    'hex': '#9E5972',
	    'percent': 1
	  }, {
	    'hex': '#B44E37',
	    'percent': 1
	  }, {
	    'hex': '#F36B76',
	    'percent': 0.27
	  }]
	}, {
	  'name': 'the Bahamas',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Flag_of_the_Bahamas.svg/200px-Flag_of_the_Bahamas.svg.png',
	  'colors': [{
	    'hex': '#00ABC9',
	    'percent': 56.44
	  }, {
	    'hex': '#000000',
	    'percent': 21.4
	  }, {
	    'hex': '#FAE042',
	    'percent': 20.27
	  }, {
	    'hex': '#A8CE6E',
	    'percent': 1.41
	  }, {
	    'hex': '#A9972D',
	    'percent': 0.08
	  }, {
	    'hex': '#62581A',
	    'percent': 0.06
	  }]
	}, {
	  'name': 'Bahrain',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/Flag_of_Bahrain.svg/167px-Flag_of_Bahrain.svg.png',
	  'colors': [{
	    'hex': '#CE1126',
	    'percent': 67.28
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 31.8
	  }, {
	    'hex': '#E78893',
	    'percent': 0.52
	  }, {
	    'hex': '#F5CDD2',
	    'percent': 0.22
	  }, {
	    'hex': '#DB5060',
	    'percent': 0.18
	  }]
	}, {
	  'name': 'Bangladesh',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/Flag_of_Bangladesh.svg/167px-Flag_of_Bangladesh.svg.png',
	  'colors': [{
	    'hex': '#006A4E',
	    'percent': 78.84
	  }, {
	    'hex': '#F42A41',
	    'percent': 20.63
	  }, {
	    'hex': '#6C4E48',
	    'percent': 0.3
	  }, {
	    'hex': '#A24045',
	    'percent': 0.23
	  }]
	}, {
	  'name': 'Barbados',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/Flag_of_Barbados.svg/150px-Flag_of_Barbados.svg.png',
	  'colors': [{
	    'hex': '#00267F',
	    'percent': 66.67
	  }, {
	    'hex': '#FFC726',
	    'percent': 29.22
	  }, {
	    'hex': '#010100',
	    'percent': 3.33
	  }, {
	    'hex': '#6A5310',
	    'percent': 0.78
	  }]
	}, {
	  'name': 'Belarus',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/85/Flag_of_Belarus.svg/200px-Flag_of_Belarus.svg.png',
	  'colors': [{
	    'hex': '#C8313E',
	    'percent': 61.88
	  }, {
	    'hex': '#4AA657',
	    'percent': 29.21
	  }, {
	    'hex': '#FEFAFA',
	    'percent': 2.87
	  }, {
	    'hex': '#E9ADB2',
	    'percent': 2.73
	  }, {
	    'hex': '#D35B65',
	    'percent': 2.27
	  }, {
	    'hex': '#9E5846',
	    'percent': 0.89
	  }]
	}, {
	  'name': 'Belgium',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Flag_of_Belgium_%28civil%29.svg/150px-Flag_of_Belgium_%28civil%29.svg.png',
	  'colors': [{
	    'hex': '#000000',
	    'percent': 33.33
	  }, {
	    'hex': '#ED2939',
	    'percent': 33.33
	  }, {
	    'hex': '#FAE042',
	    'percent': 33.33
	  }]
	}, {
	  'name': 'Belize',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Flag_of_Belize.svg/150px-Flag_of_Belize.svg.png',
	  'colors': [{
	    'hex': '#003F87',
	    'percent': 53.53
	  }, {
	    'hex': '#CE1126',
	    'percent': 14.07
	  }, {
	    'hex': '#D5DBD6',
	    'percent': 4.64
	  }, {
	    'hex': '#2A9104',
	    'percent': 4.33
	  }, {
	    'hex': '#63A55C',
	    'percent': 1.39
	  }, {
	    'hex': '#D0AF4C',
	    'percent': 1.25
	  }]
	}, {
	  'name': 'Benin',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/0a/Flag_of_Benin.svg/150px-Flag_of_Benin.svg.png',
	  'colors': [{
	    'hex': '#008751',
	    'percent': 40
	  }, {
	    'hex': '#FCD116',
	    'percent': 30
	  }, {
	    'hex': '#E8112D',
	    'percent': 30
	  }]
	}, {
	  'name': 'Bhutan',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Flag_of_Bhutan.svg/150px-Flag_of_Bhutan.svg.png',
	  'colors': [{
	    'hex': '#FFD520',
	    'percent': 43.25
	  }, {
	    'hex': '#FF4E12',
	    'percent': 39.98
	  }, {
	    'hex': '#F3F3F3',
	    'percent': 12.35
	  }, {
	    'hex': '#D4B8AD',
	    'percent': 2.53
	  }, {
	    'hex': '#E6734C',
	    'percent': 1.07
	  }, {
	    'hex': '#E5CC5D',
	    'percent': 0.78
	  }]
	}, {
	  'name': 'Bolivia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/de/Flag_of_Bolivia_%28state%29.svg/147px-Flag_of_Bolivia_%28state%29.svg.png',
	  'colors': [{
	    'hex': '#D52B1E',
	    'percent': 34.16
	  }, {
	    'hex': '#007934',
	    'percent': 33.24
	  }, {
	    'hex': '#FFE000',
	    'percent': 28.15
	  }, {
	    'hex': '#F0A40A',
	    'percent': 1.59
	  }, {
	    'hex': '#ABBE11',
	    'percent': 1.12
	  }, {
	    'hex': '#A46021',
	    'percent': 0.24
	  }]
	}, {
	  'name': 'Bosnia and Herzegovina',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/bf/Flag_of_Bosnia_and_Herzegovina.svg/200px-Flag_of_Bosnia_and_Herzegovina.svg.png',
	  'colors': [{
	    'hex': '#002395',
	    'percent': 70.1
	  }, {
	    'hex': '#FECB00',
	    'percent': 24.75
	  }, {
	    'hex': '#FDFDFE',
	    'percent': 3.16
	  }, {
	    'hex': '#97A6D4',
	    'percent': 0.76
	  }, {
	    'hex': '#7F774A',
	    'percent': 0.51
	  }, {
	    'hex': '#6177BD',
	    'percent': 0.49
	  }]
	}, {
	  'name': 'Botswana',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/fa/Flag_of_Botswana.svg/150px-Flag_of_Botswana.svg.png',
	  'colors': [{
	    'hex': '#75AADB',
	    'percent': 74
	  }, {
	    'hex': '#000000',
	    'percent': 16
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 6
	  }, {
	    'hex': '#AAAAAA',
	    'percent': 2
	  }, {
	    'hex': '#BAD5ED',
	    'percent': 2
	  }]
	}, {
	  'name': 'Brazil',
	  'url': 'https://upload.wikimedia.org/wikipedia/en/thumb/0/05/Flag_of_Brazil.svg/143px-Flag_of_Brazil.svg.png',
	  'colors': [{
	    'hex': '#009B3A',
	    'percent': 68.17
	  }, {
	    'hex': '#FDDF00',
	    'percent': 17.08
	  }, {
	    'hex': '#012876',
	    'percent': 11.44
	  }, {
	    'hex': '#61B125',
	    'percent': 0.43
	  }, {
	    'hex': '#304F90',
	    'percent': 0.41
	  }, {
	    'hex': '#6FC790',
	    'percent': 0.22
	  }]
	}, {
	  'name': 'Brunei',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/9c/Flag_of_Brunei.svg/200px-Flag_of_Brunei.svg.png',
	  'colors': [{
	    'hex': '#F7E017',
	    'percent': 53.66
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 20.42
	  }, {
	    'hex': '#010000',
	    'percent': 16.61
	  }, {
	    'hex': '#CF1226',
	    'percent': 4.35
	  }, {
	    'hex': '#E2751F',
	    'percent': 1.13
	  }, {
	    'hex': '#DE5A68',
	    'percent': 0.85
	  }]
	}, {
	  'name': 'Bulgaria',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Flag_of_Bulgaria.svg/167px-Flag_of_Bulgaria.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 33
	  }, {
	    'hex': '#D62612',
	    'percent': 33
	  }, {
	    'hex': '#00966E',
	    'percent': 32
	  }, {
	    'hex': '#47714F',
	    'percent': 1
	  }, {
	    'hex': '#54B99E',
	    'percent': 1
	  }]
	}, {
	  'name': 'Burkina Faso',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Flag_of_Burkina_Faso.svg/150px-Flag_of_Burkina_Faso.svg.png',
	  'colors': [{
	    'hex': '#009E49',
	    'percent': 49.01
	  }, {
	    'hex': '#EF2B2D',
	    'percent': 48.89
	  }, {
	    'hex': '#FCD116',
	    'percent': 1.89
	  }, {
	    'hex': '#F89B1D',
	    'percent': 0.11
	  }, {
	    'hex': '#8EBB2C',
	    'percent': 0.11
	  }]
	}, {
	  'name': 'Burundi',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/50/Flag_of_Burundi.svg/167px-Flag_of_Burundi.svg.png',
	  'colors': [{
	    'hex': '#1EB53A',
	    'percent': 33.57
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 32.79
	  }, {
	    'hex': '#CE1126',
	    'percent': 30.27
	  }, {
	    'hex': '#D8EEDA',
	    'percent': 1.25
	  }, {
	    'hex': '#5CC870',
	    'percent': 0.71
	  }, {
	    'hex': '#DD5867',
	    'percent': 0.42
	  }]
	}, {
	  'name': 'Cambodia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Flag_of_Cambodia.svg/157px-Flag_of_Cambodia.svg.png',
	  'colors': [{
	    'hex': '#032EA1',
	    'percent': 50
	  }, {
	    'hex': '#E00025',
	    'percent': 39.82
	  }, {
	    'hex': '#A49FA0',
	    'percent': 4.6
	  }, {
	    'hex': '#767273',
	    'percent': 0.56
	  }, {
	    'hex': '#A05964',
	    'percent': 0.25
	  }, {
	    'hex': '#752A37',
	    'percent': 0.12
	  }]
	}, {
	  'name': 'Cameroon',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/4f/Flag_of_Cameroon.svg/150px-Flag_of_Cameroon.svg.png',
	  'colors': [{
	    'hex': '#FCD116',
	    'percent': 34.59
	  }, {
	    'hex': '#007A5E',
	    'percent': 33.33
	  }, {
	    'hex': '#CE1126',
	    'percent': 31.91
	  }, {
	    'hex': '#E6761E',
	    'percent': 0.17
	  }]
	}, {
	  'name': 'Canada',
	  'url': 'https://upload.wikimedia.org/wikipedia/en/thumb/c/cf/Flag_of_Canada.svg/200px-Flag_of_Canada.svg.png',
	  'colors': [{
	    'hex': '#FF0000',
	    'percent': 63.02
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 35.58
	  }, {
	    'hex': '#FFD0D0',
	    'percent': 0.48
	  }, {
	    'hex': '#FF9191',
	    'percent': 0.45
	  }, {
	    'hex': '#FF2C2C',
	    'percent': 0.3
	  }, {
	    'hex': '#FF5050',
	    'percent': 0.19
	  }]
	}, {
	  'name': 'Cape Verde',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/38/Flag_of_Cape_Verde.svg/170px-Flag_of_Cape_Verde.svg.png',
	  'colors': [{
	    'hex': '#003893',
	    'percent': 73.59
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 15.1
	  }, {
	    'hex': '#CF2027',
	    'percent': 7
	  }, {
	    'hex': '#DF696E',
	    'percent': 1.99
	  }, {
	    'hex': '#F5D017',
	    'percent': 1.21
	  }, {
	    'hex': '#B5A838',
	    'percent': 0.3
	  }]
	}, {
	  'name': 'Central African Republic',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/Flag_of_the_Central_African_Republic.svg/150px-Flag_of_the_Central_African_Republic.svg.png',
	  'colors': [{
	    'hex': '#FFCE00',
	    'percent': 21.43
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 20.67
	  }, {
	    'hex': '#289728',
	    'percent': 20.67
	  }, {
	    'hex': '#003082',
	    'percent': 19.55
	  }, {
	    'hex': '#D21034',
	    'percent': 16
	  }, {
	    'hex': '#CDAF1A',
	    'percent': 0.13
	  }]
	}, {
	  'name': 'Chad',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/4b/Flag_of_Chad.svg/150px-Flag_of_Chad.svg.png',
	  'colors': [{
	    'hex': '#FECB00',
	    'percent': 33.33
	  }, {
	    'hex': '#002664',
	    'percent': 33.33
	  }, {
	    'hex': '#C60C30',
	    'percent': 33.33
	  }]
	}, {
	  'name': 'Chile',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/78/Flag_of_Chile.svg/150px-Flag_of_Chile.svg.png',
	  'colors': [{
	    'hex': '#D52B1E',
	    'percent': 50
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 34.45
	  }, {
	    'hex': '#0039A6',
	    'percent': 15.3
	  }, {
	    'hex': '#3663B9',
	    'percent': 0.13
	  }, {
	    'hex': '#A3B8DF',
	    'percent': 0.09
	  }, {
	    'hex': '#6A8CCB',
	    'percent': 0.03
	  }]
	}, {
	  'name': 'China',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/fa/Flag_of_the_People%27s_Republic_of_China.svg/150px-Flag_of_the_People%27s_Republic_of_China.svg.png',
	  'colors': [{
	    'hex': '#DE2910',
	    'percent': 97.09
	  }, {
	    'hex': '#FFDC00',
	    'percent': 2.46
	  }, {
	    'hex': '#EB6F0A',
	    'percent': 0.45
	  }]
	}, {
	  'name': 'Colombia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Flag_of_Colombia.svg/150px-Flag_of_Colombia.svg.png',
	  'colors': [{
	    'hex': '#FCD116',
	    'percent': 50
	  }, {
	    'hex': '#003893',
	    'percent': 25
	  }, {
	    'hex': '#CE1126',
	    'percent': 25
	  }]
	}, {
	  'name': 'Comoros',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/94/Flag_of_the_Comoros.svg/167px-Flag_of_the_Comoros.svg.png',
	  'colors': [{
	    'hex': '#3A75C4',
	    'percent': 21.86
	  }, {
	    'hex': '#FFC61E',
	    'percent': 21.81
	  }, {
	    'hex': '#3D8E33',
	    'percent': 21.09
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 18.18
	  }, {
	    'hex': '#CE1126',
	    'percent': 15.59
	  }, {
	    'hex': '#709D2E',
	    'percent': 0.06
	  }]
	}, {
	  'name': 'Democratic Republic of the Congo',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/Flag_of_the_Democratic_Republic_of_the_Congo.svg/133px-Flag_of_the_Democratic_Republic_of_the_Congo.svg.png',
	  'colors': [{
	    'hex': '#007FFF',
	    'percent': 65.81
	  }, {
	    'hex': '#CE1021',
	    'percent': 19.52
	  }, {
	    'hex': '#F7D518',
	    'percent': 11.62
	  }, {
	    'hex': '#539CB2',
	    'percent': 1.25
	  }, {
	    'hex': '#E16C1D',
	    'percent': 0.95
	  }, {
	    'hex': '#B1BD59',
	    'percent': 0.84
	  }]
	}, {
	  'name': 'Congo',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Flag_of_the_Republic_of_the_Congo.svg/150px-Flag_of_the_Republic_of_the_Congo.svg.png',
	  'colors': [{
	    'hex': '#009543',
	    'percent': 33
	  }, {
	    'hex': '#DC241F',
	    'percent': 33
	  }, {
	    'hex': '#FBDE4A',
	    'percent': 32.67
	  }, {
	    'hex': '#EC8134',
	    'percent': 0.67
	  }, {
	    'hex': '#7DBA47',
	    'percent': 0.67
	  }]
	}, {
	  'name': 'Costa Rica',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/f2/Flag_of_Costa_Rica.svg/167px-Flag_of_Costa_Rica.svg.png',
	  'colors': [{
	    'hex': '#002B7F',
	    'percent': 32
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 32
	  }, {
	    'hex': '#CE1126',
	    'percent': 32
	  }, {
	    'hex': '#5572AA',
	    'percent': 2
	  }, {
	    'hex': '#DE5F6D',
	    'percent': 2
	  }]
	}, {
	  'name': 'Croatia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Flag_of_Croatia.svg/200px-Flag_of_Croatia.svg.png',
	  'colors': [{
	    'hex': '#FF0000',
	    'percent': 32.58
	  }, {
	    'hex': '#171796',
	    'percent': 32.49
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 28.63
	  }, {
	    'hex': '#FD7071',
	    'percent': 1.19
	  }, {
	    'hex': '#B3B3DC',
	    'percent': 1.02
	  }, {
	    'hex': '#9C2639',
	    'percent': 0.13
	  }]
	}, {
	  'name': 'Cuba',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/bd/Flag_of_Cuba.svg/200px-Flag_of_Cuba.svg.png',
	  'colors': [{
	    'hex': '#002A8F',
	    'percent': 48.48
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 30.63
	  }, {
	    'hex': '#CF142B',
	    'percent': 19.92
	  }, {
	    'hex': '#302578',
	    'percent': 0.23
	  }, {
	    'hex': '#E16B79',
	    'percent': 0.17
	  }, {
	    'hex': '#DA495B',
	    'percent': 0.17
	  }]
	}, {
	  'name': 'Cyprus',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d4/Flag_of_Cyprus.svg/150px-Flag_of_Cyprus.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 88.06
	  }, {
	    'hex': '#D47600',
	    'percent': 8.13
	  }, {
	    'hex': '#F0E6D6',
	    'percent': 1.05
	  }, {
	    'hex': '#475429',
	    'percent': 0.67
	  }, {
	    'hex': '#E4A85D',
	    'percent': 0.35
	  }, {
	    'hex': '#DC8E2D',
	    'percent': 0.25
	  }]
	}, {
	  'name': 'Czech Republic',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/cb/Flag_of_the_Czech_Republic.svg/150px-Flag_of_the_Czech_Republic.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 37.33
	  }, {
	    'hex': '#D7141A',
	    'percent': 37.33
	  }, {
	    'hex': '#11457E',
	    'percent': 24.67
	  }, {
	    'hex': '#B0C1D4',
	    'percent': 0.17
	  }, {
	    'hex': '#6083A9',
	    'percent': 0.17
	  }, {
	    'hex': '#95243B',
	    'percent': 0.17
	  }]
	}, {
	  'name': 'Denmark',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/9c/Flag_of_Denmark.svg/132px-Flag_of_Denmark.svg.png',
	  'colors': [{
	    'hex': '#C60C30',
	    'percent': 76.86
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 23.12
	  }, {
	    'hex': '#D8576F',
	    'percent': 0.02
	  }]
	}, {
	  'name': 'Djibouti',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Flag_of_Djibouti.svg/150px-Flag_of_Djibouti.svg.png',
	  'colors': [{
	    'hex': '#6AB2E7',
	    'percent': 35.61
	  }, {
	    'hex': '#12AD2B',
	    'percent': 35.44
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 27.09
	  }, {
	    'hex': '#D7141A',
	    'percent': 1.24
	  }, {
	    'hex': '#E45F63',
	    'percent': 0.17
	  }, {
	    'hex': '#5DC76E',
	    'percent': 0.11
	  }]
	}, {
	  'name': 'Dominica',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c4/Flag_of_Dominica.svg/200px-Flag_of_Dominica.svg.png',
	  'colors': [{
	    'hex': '#000000',
	    'percent': 8
	  }, {
	    'hex': '#D31C30',
	    'percent': 7.49
	  }, {
	    'hex': '#FCD116',
	    'percent': 7.18
	  }, {
	    'hex': '#D4AD13',
	    'percent': 1.12
	  }, {
	    'hex': '#80B59F',
	    'percent': 1.06
	  }, {
	    'hex': '#7E9E2A',
	    'percent': 1.06
	  }]
	}, {
	  'name': 'Dominican Republic',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/Flag_of_the_Dominican_Republic.svg/150px-Flag_of_the_Dominican_Republic.svg.png',
	  'colors': [{
	    'hex': '#CE1126',
	    'percent': 34.8
	  }, {
	    'hex': '#002D62',
	    'percent': 34.77
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 28.84
	  }, {
	    'hex': '#358F49',
	    'percent': 0.17
	  }, {
	    'hex': '#9E2228',
	    'percent': 0.12
	  }, {
	    'hex': '#0D7720',
	    'percent': 0.09
	  }]
	}, {
	  'name': 'Timor-Leste',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/26/Flag_of_East_Timor.svg/200px-Flag_of_East_Timor.svg.png',
	  'colors': [{
	    'hex': '#DC241F',
	    'percent': 75
	  }, {
	    'hex': '#000000',
	    'percent': 14.35
	  }, {
	    'hex': '#FFC726',
	    'percent': 8.08
	  }, {
	    'hex': '#5D490E',
	    'percent': 0.17
	  }, {
	    'hex': '#A17E18',
	    'percent': 0.16
	  }, {
	    'hex': '#D2A41F',
	    'percent': 0.09
	  }]
	}, {
	  'name': 'Ecuador',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e8/Flag_of_Ecuador.svg/150px-Flag_of_Ecuador.svg.png',
	  'colors': [{
	    'hex': '#FFDD00',
	    'percent': 46.95
	  }, {
	    'hex': '#ED1C24',
	    'percent': 25.45
	  }, {
	    'hex': '#034EA2',
	    'percent': 21.57
	  }, {
	    'hex': '#483220',
	    'percent': 1.03
	  }, {
	    'hex': '#42AAC9',
	    'percent': 0.34
	  }, {
	    'hex': '#4D9332',
	    'percent': 0.33
	  }]
	}, {
	  'name': 'Egypt',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/Flag_of_Egypt.svg/150px-Flag_of_Egypt.svg.png',
	  'colors': [{
	    'hex': '#000000',
	    'percent': 33
	  }, {
	    'hex': '#CE1126',
	    'percent': 33
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 28.39
	  }, {
	    'hex': '#E4D091',
	    'percent': 2.16
	  }, {
	    'hex': '#EFB0B7',
	    'percent': 1
	  }, {
	    'hex': '#C29608',
	    'percent': 0.78
	  }]
	}, {
	  'name': 'El Salvador',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Flag_of_El_Salvador.svg/178px-Flag_of_El_Salvador.svg.png',
	  'colors': [{
	    'hex': '#0F47AF',
	    'percent': 66.21
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 29.85
	  }, {
	    'hex': '#B0C2E5',
	    'percent': 2.21
	  }, {
	    'hex': '#C1B11D',
	    'percent': 0.12
	  }, {
	    'hex': '#258795',
	    'percent': 0.08
	  }, {
	    'hex': '#E27C77',
	    'percent': 0.04
	  }]
	}, {
	  'name': 'Equatorial Guinea',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Flag_of_Equatorial_Guinea.svg/150px-Flag_of_Equatorial_Guinea.svg.png',
	  'colors': [{
	    'hex': '#3E9A00',
	    'percent': 30.22
	  }, {
	    'hex': '#E32118',
	    'percent': 30.22
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 22.73
	  }, {
	    'hex': '#0073CE',
	    'percent': 12.23
	  }, {
	    'hex': '#D2D2D1',
	    'percent': 2.29
	  }, {
	    'hex': '#3893BA',
	    'percent': 0.09
	  }]
	}, {
	  'name': 'Eritrea',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Flag_of_Eritrea.svg/200px-Flag_of_Eritrea.svg.png',
	  'colors': [{
	    'hex': '#EA0437',
	    'percent': 41.72
	  }, {
	    'hex': '#12AD2B',
	    'percent': 24.75
	  }, {
	    'hex': '#4189DD',
	    'percent': 24.75
	  }, {
	    'hex': '#F25130',
	    'percent': 1.57
	  }, {
	    'hex': '#F9902B',
	    'percent': 1.25
	  }, {
	    'hex': '#A63979',
	    'percent': 0.25
	  }]
	}, {
	  'name': 'Estonia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/8f/Flag_of_Estonia.svg/157px-Flag_of_Estonia.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 33
	  }, {
	    'hex': '#4891D9',
	    'percent': 33
	  }, {
	    'hex': '#000000',
	    'percent': 32
	  }, {
	    'hex': '#545454',
	    'percent': 1
	  }, {
	    'hex': '#183048',
	    'percent': 1
	  }]
	}, {
	  'name': 'Ethiopia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/71/Flag_of_Ethiopia.svg/200px-Flag_of_Ethiopia.svg.png',
	  'colors': [{
	    'hex': '#078930',
	    'percent': 29.6
	  }, {
	    'hex': '#DA121A',
	    'percent': 29.59
	  }, {
	    'hex': '#FBDD09',
	    'percent': 23.04
	  }, {
	    'hex': '#0F47AF',
	    'percent': 13.56
	  }, {
	    'hex': '#D7C623',
	    'percent': 0.71
	  }, {
	    'hex': '#A12144',
	    'percent': 0.08
	  }]
	}, {
	  'name': 'Fiji',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/ba/Flag_of_Fiji.svg/200px-Flag_of_Fiji.svg.png',
	  'colors': [{
	    'hex': '#68BFE5',
	    'percent': 64.99
	  }, {
	    'hex': '#CF1129',
	    'percent': 11.92
	  }, {
	    'hex': '#FEFEFE',
	    'percent': 9.24
	  }, {
	    'hex': '#DFD1D5',
	    'percent': 1.57
	  }, {
	    'hex': '#4E6D94',
	    'percent': 1.34
	  }, {
	    'hex': '#B4962A',
	    'percent': 0.09
	  }]
	}, {
	  'name': 'Finland',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Flag_of_Finland.svg/164px-Flag_of_Finland.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 59.71
	  }, {
	    'hex': '#003580',
	    'percent': 38.2
	  }, {
	    'hex': '#5C7EAE',
	    'percent': 1.66
	  }, {
	    'hex': '#8DA5C6',
	    'percent': 0.44
	  }]
	}, {
	  'name': 'France',
	  'url': 'https://upload.wikimedia.org/wikipedia/en/thumb/c/c3/Flag_of_France.svg/150px-Flag_of_France.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 33.33
	  }, {
	    'hex': '#002395',
	    'percent': 33.33
	  }, {
	    'hex': '#ED2939',
	    'percent': 33.33
	  }]
	}, {
	  'name': 'Gabon',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Flag_of_Gabon.svg/133px-Flag_of_Gabon.svg.png',
	  'colors': [{
	    'hex': '#009E60',
	    'percent': 33
	  }, {
	    'hex': '#3A75C4',
	    'percent': 33
	  }, {
	    'hex': '#FCD116',
	    'percent': 32
	  }, {
	    'hex': '#BCB350',
	    'percent': 1
	  }, {
	    'hex': '#A8C02F',
	    'percent': 1
	  }]
	}, {
	  'name': 'the Gambia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/77/Flag_of_The_Gambia.svg/150px-Flag_of_The_Gambia.svg.png',
	  'colors': [{
	    'hex': '#CE1126',
	    'percent': 33
	  }, {
	    'hex': '#3A7728',
	    'percent': 33
	  }, {
	    'hex': '#0C1C8C',
	    'percent': 22
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 10
	  }, {
	    'hex': '#BDD2B7',
	    'percent': 1
	  }, {
	    'hex': '#D0C2D7',
	    'percent': 1
	  }]
	}, {
	  'name': 'Georgia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/Flag_of_Georgia.svg/150px-Flag_of_Georgia.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 63.35
	  }, {
	    'hex': '#FF0000',
	    'percent': 34.88
	  }, {
	    'hex': '#FF8E8E',
	    'percent': 0.93
	  }, {
	    'hex': '#FF2E2E',
	    'percent': 0.6
	  }, {
	    'hex': '#FFD4D4',
	    'percent': 0.24
	  }]
	}, {
	  'name': 'Germany',
	  'url': 'https://upload.wikimedia.org/wikipedia/en/thumb/b/ba/Flag_of_Germany.svg/167px-Flag_of_Germany.svg.png',
	  'colors': [{
	    'hex': '#FFCE00',
	    'percent': 33
	  }, {
	    'hex': '#000000',
	    'percent': 33
	  }, {
	    'hex': '#DD0000',
	    'percent': 32
	  }, {
	    'hex': '#E84500',
	    'percent': 1
	  }, {
	    'hex': '#930000',
	    'percent': 1
	  }]
	}, {
	  'name': 'Ghana',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/19/Flag_of_Ghana.svg/150px-Flag_of_Ghana.svg.png',
	  'colors': [{
	    'hex': '#006B3F',
	    'percent': 33
	  }, {
	    'hex': '#CE1126',
	    'percent': 33
	  }, {
	    'hex': '#FCD116',
	    'percent': 29.18
	  }, {
	    'hex': '#ED911C',
	    'percent': 1.13
	  }, {
	    'hex': '#A9AF24',
	    'percent': 1.04
	  }, {
	    'hex': '#8C750C',
	    'percent': 0.13
	  }]
	}, {
	  'name': 'Greece',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Flag_of_Greece.svg/150px-Flag_of_Greece.svg.png',
	  'colors': [{
	    'hex': '#0D5EAF',
	    'percent': 52.89
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 41.49
	  }, {
	    'hex': '#79A6D3',
	    'percent': 2.27
	  }, {
	    'hex': '#AEC9E4',
	    'percent': 1.71
	  }, {
	    'hex': '#4382C1',
	    'percent': 1.63
	  }]
	}, {
	  'name': 'Grenada',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Flag_of_Grenada.svg/167px-Flag_of_Grenada.svg.png',
	  'colors': [{
	    'hex': '#CE1126',
	    'percent': 39.96
	  }, {
	    'hex': '#FCD116',
	    'percent': 30.65
	  }, {
	    'hex': '#007A5E',
	    'percent': 27.75
	  }, {
	    'hex': '#DD6221',
	    'percent': 0.78
	  }, {
	    'hex': '#78A43C',
	    'percent': 0.62
	  }, {
	    'hex': '#992C34',
	    'percent': 0.02
	  }]
	}, {
	  'name': 'Guatemala',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Flag_of_Guatemala.svg/160px-Flag_of_Guatemala.svg.png',
	  'colors': [{
	    'hex': '#4997D0',
	    'percent': 66.25
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 28.57
	  }, {
	    'hex': '#C3DDF0',
	    'percent': 1.93
	  }, {
	    'hex': '#EAD98C',
	    'percent': 0.82
	  }, {
	    'hex': '#6B5032',
	    'percent': 0.21
	  }, {
	    'hex': '#C8AD4E',
	    'percent': 0.06
	  }]
	}, {
	  'name': 'Guinea',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/ed/Flag_of_Guinea.svg/150px-Flag_of_Guinea.svg.png',
	  'colors': [{
	    'hex': '#009460',
	    'percent': 33.33
	  }, {
	    'hex': '#CE1126',
	    'percent': 33.33
	  }, {
	    'hex': '#FCD116',
	    'percent': 33.33
	  }]
	}, {
	  'name': 'Guinea-Bissau',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/01/Flag_of_Guinea-Bissau.svg/200px-Flag_of_Guinea-Bissau.svg.png',
	  'colors': [{
	    'hex': '#009E49',
	    'percent': 33.25
	  }, {
	    'hex': '#FCD116',
	    'percent': 33.25
	  }, {
	    'hex': '#CE1126',
	    'percent': 31.42
	  }, {
	    'hex': '#764D35',
	    'percent': 0.25
	  }, {
	    'hex': '#E2631F',
	    'percent': 0.25
	  }, {
	    'hex': '#50070F',
	    'percent': 0.22
	  }]
	}, {
	  'name': 'Guyana',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Flag_of_Guyana.svg/167px-Flag_of_Guyana.svg.png',
	  'colors': [{
	    'hex': '#009E49',
	    'percent': 49.23
	  }, {
	    'hex': '#CE1126',
	    'percent': 19.43
	  }, {
	    'hex': '#FCD116',
	    'percent': 16.25
	  }, {
	    'hex': '#FEFEFD',
	    'percent': 6.5
	  }, {
	    'hex': '#46B97B',
	    'percent': 0.82
	  }, {
	    'hex': '#6B5E24',
	    'percent': 0.21
	  }]
	}, {
	  'name': 'Haiti',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/56/Flag_of_Haiti.svg/167px-Flag_of_Haiti.svg.png',
	  'colors': [{
	    'hex': '#00209F',
	    'percent': 47.53
	  }, {
	    'hex': '#D21034',
	    'percent': 47.53
	  }, {
	    'hex': '#1D6D1F',
	    'percent': 0.41
	  }, {
	    'hex': '#A56A25',
	    'percent': 0.29
	  }, {
	    'hex': '#BD9B3F',
	    'percent': 0.28
	  }, {
	    'hex': '#D0504D',
	    'percent': 0.14
	  }]
	}, {
	  'name': 'Honduras',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/Flag_of_Honduras.svg/200px-Flag_of_Honduras.svg.png',
	  'colors': [{
	    'hex': '#0073CF',
	    'percent': 66.55
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 30.76
	  }, {
	    'hex': '#AAD0EF',
	    'percent': 2.32
	  }, {
	    'hex': '#55A2DF',
	    'percent': 0.38
	  }]
	}, {
	  'name': 'Hungary',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c1/Flag_of_Hungary.svg/200px-Flag_of_Hungary.svg.png',
	  'colors': [{
	    'hex': '#436F4D',
	    'percent': 33
	  }, {
	    'hex': '#CD2A3E',
	    'percent': 33
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 32
	  }, {
	    'hex': '#C1D0C4',
	    'percent': 1
	  }, {
	    'hex': '#EEB8BF',
	    'percent': 1
	  }]
	}, {
	  'name': 'Iceland',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/ce/Flag_of_Iceland.svg/139px-Flag_of_Iceland.svg.png',
	  'colors': [{
	    'hex': '#003897',
	    'percent': 65.64
	  }, {
	    'hex': '#D72828',
	    'percent': 16.47
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 14.75
	  }, {
	    'hex': '#EA8C8C',
	    'percent': 3.07
	  }, {
	    'hex': '#E05757',
	    'percent': 0.05
	  }, {
	    'hex': '#4971B5',
	    'percent': 0.01
	  }]
	}, {
	  'name': 'India',
	  'url': 'https://upload.wikimedia.org/wikipedia/en/thumb/4/41/Flag_of_India.svg/150px-Flag_of_India.svg.png',
	  'colors': [{
	    'hex': '#FF9933',
	    'percent': 33
	  }, {
	    'hex': '#128807',
	    'percent': 33
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 28.97
	  }, {
	    'hex': '#B0C07F',
	    'percent': 1
	  }, {
	    'hex': '#07078B',
	    'percent': 0.68
	  }, {
	    'hex': '#3A3AA3',
	    'percent': 0.47
	  }]
	}, {
	  'name': 'Indonesia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/Flag_of_Indonesia.svg/150px-Flag_of_Indonesia.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 50
	  }, {
	    'hex': '#CE1126',
	    'percent': 50
	  }]
	}, {
	  'name': 'Iran',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/ca/Flag_of_Iran.svg/175px-Flag_of_Iran.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 32.05
	  }, {
	    'hex': '#DA0101',
	    'percent': 29.91
	  }, {
	    'hex': '#239F40',
	    'percent': 28.42
	  }, {
	    'hex': '#B0DDBA',
	    'percent': 2.23
	  }, {
	    'hex': '#E96A6A',
	    'percent': 1.91
	  }, {
	    'hex': '#8ACC99',
	    'percent': 1.81
	  }]
	}, {
	  'name': 'Iraq',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/Flag_of_Iraq.svg/150px-Flag_of_Iraq.svg.png',
	  'colors': [{
	    'hex': '#000000',
	    'percent': 33
	  }, {
	    'hex': '#DCEDE5',
	    'percent': 30.53
	  }, {
	    'hex': '#14844C',
	    'percent': 1.85
	  }, {
	    'hex': '#E9949D',
	    'percent': 0.99
	  }, {
	    'hex': '#459E71',
	    'percent': 0.33
	  }, {
	    'hex': '#84BFA1',
	    'percent': 0.3
	  }]
	}, {
	  'name': 'Ireland',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/45/Flag_of_Ireland.svg/200px-Flag_of_Ireland.svg.png',
	  'colors': [{
	    'hex': '#FF883E',
	    'percent': 33.5
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 33
	  }, {
	    'hex': '#169B62',
	    'percent': 33
	  }, {
	    'hex': '#7AC5A5',
	    'percent': 0.5
	  }]
	}, {
	  'name': 'Israel',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d4/Flag_of_Israel.svg/138px-Flag_of_Israel.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 63.14
	  }, {
	    'hex': '#0038B8',
	    'percent': 33.8
	  }, {
	    'hex': '#5F82D2',
	    'percent': 2.5
	  }, {
	    'hex': '#D8E1F4',
	    'percent': 0.41
	  }, {
	    'hex': '#88A2DE',
	    'percent': 0.14
	  }]
	}, {
	  'name': 'Italy',
	  'url': 'https://upload.wikimedia.org/wikipedia/en/thumb/0/03/Flag_of_Italy.svg/150px-Flag_of_Italy.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 33.33
	  }, {
	    'hex': '#009246',
	    'percent': 33.33
	  }, {
	    'hex': '#CE2B37',
	    'percent': 33.33
	  }]
	}, {
	  'name': 'Ivory Coast',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/Flag_of_C%C3%B4te_d%27Ivoire.svg/150px-Flag_of_C%C3%B4te_d%27Ivoire.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 33.33
	  }, {
	    'hex': '#F77F00',
	    'percent': 33.33
	  }, {
	    'hex': '#009E60',
	    'percent': 33.33
	  }]
	}, {
	  'name': 'Jamaica',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/0a/Flag_of_Jamaica.svg/200px-Flag_of_Jamaica.svg.png',
	  'colors': [{
	    'hex': '#000000',
	    'percent': 32.8
	  }, {
	    'hex': '#009B3A',
	    'percent': 32.8
	  }, {
	    'hex': '#FED100',
	    'percent': 32.76
	  }, {
	    'hex': '#8B7300',
	    'percent': 0.82
	  }, {
	    'hex': '#8AB91A',
	    'percent': 0.82
	  }]
	}, {
	  'name': 'Japan',
	  'url': 'https://upload.wikimedia.org/wikipedia/en/thumb/9/9e/Flag_of_Japan.svg/150px-Flag_of_Japan.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 80.82
	  }, {
	    'hex': '#BC002D',
	    'percent': 18.27
	  }, {
	    'hex': '#D14F6E',
	    'percent': 0.58
	  }, {
	    'hex': '#EDBBC7',
	    'percent': 0.22
	  }, {
	    'hex': '#DF869B',
	    'percent': 0.11
	  }]
	}, {
	  'name': 'Jordan',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c0/Flag_of_Jordan.svg/200px-Flag_of_Jordan.svg.png',
	  'colors': [{
	    'hex': '#007A3D',
	    'percent': 27.39
	  }, {
	    'hex': '#000000',
	    'percent': 27.39
	  }, {
	    'hex': '#CE1126',
	    'percent': 24.14
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 18.66
	  }, {
	    'hex': '#D84857',
	    'percent': 0.27
	  }, {
	    'hex': '#972D2C',
	    'percent': 0.17
	  }]
	}, {
	  'name': 'Kazakhstan',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Flag_of_Kazakhstan.svg/200px-Flag_of_Kazakhstan.svg.png',
	  'colors': [{
	    'hex': '#00AFCA',
	    'percent': 87.48
	  }, {
	    'hex': '#FAC50F',
	    'percent': 6.14
	  }, {
	    'hex': '#97BC59',
	    'percent': 3.56
	  }, {
	    'hex': '#2BB3AA',
	    'percent': 2.84
	  }]
	}, {
	  'name': 'Kenya',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/Flag_of_Kenya.svg/150px-Flag_of_Kenya.svg.png',
	  'colors': [{
	    'hex': '#000000',
	    'percent': 30.01
	  }, {
	    'hex': '#BB0000',
	    'percent': 29.39
	  }, {
	    'hex': '#006600',
	    'percent': 28.87
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 9.73
	  }, {
	    'hex': '#D56262',
	    'percent': 0.89
	  }, {
	    'hex': '#E6A6A6',
	    'percent': 0.17
	  }]
	}, {
	  'name': 'Kiribati',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Flag_of_Kiribati.svg/200px-Flag_of_Kiribati.svg.png',
	  'colors': [{
	    'hex': '#CE1126',
	    'percent': 45.71
	  }, {
	    'hex': '#FFFEFF',
	    'percent': 18.84
	  }, {
	    'hex': '#FACF15',
	    'percent': 5.61
	  }, {
	    'hex': '#D0DCE9',
	    'percent': 1.42
	  }, {
	    'hex': '#3768A1',
	    'percent': 1.42
	  }, {
	    'hex': '#8FABCA',
	    'percent': 1.28
	  }]
	}, {
	  'name': 'North Korea',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/51/Flag_of_North_Korea.svg/200px-Flag_of_North_Korea.svg.png',
	  'colors': [{
	    'hex': '#ED1C27',
	    'percent': 54.24
	  }, {
	    'hex': '#024FA2',
	    'percent': 32
	  }, {
	    'hex': '#FFFEFE',
	    'percent': 8.84
	  }, {
	    'hex': '#F5868C',
	    'percent': 2.34
	  }, {
	    'hex': '#568AC1',
	    'percent': 2
	  }, {
	    'hex': '#F14C55',
	    'percent': 0.35
	  }]
	}, {
	  'name': 'South Korea',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/09/Flag_of_South_Korea.svg/150px-Flag_of_South_Korea.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 76.15
	  }, {
	    'hex': '#013478',
	    'percent': 6.3
	  }, {
	    'hex': '#C60C30',
	    'percent': 6.28
	  }, {
	    'hex': '#030303',
	    'percent': 6.16
	  }, {
	    'hex': '#EED6DE',
	    'percent': 1.36
	  }, {
	    'hex': '#303030',
	    'percent': 1.21
	  }]
	}, {
	  'name': 'Kuwait',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Flag_of_Kuwait.svg/200px-Flag_of_Kuwait.svg.png',
	  'colors': [{
	    'hex': '#007A3D',
	    'percent': 28.84
	  }, {
	    'hex': '#CE1126',
	    'percent': 28.84
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 24.75
	  }, {
	    'hex': '#000000',
	    'percent': 16.59
	  }, {
	    'hex': '#EA9AA3',
	    'percent': 0.75
	  }, {
	    'hex': '#890B19',
	    'percent': 0.08
	  }]
	}, {
	  'name': 'Kyrgyzstan',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c7/Flag_of_Kyrgyzstan.svg/167px-Flag_of_Kyrgyzstan.svg.png',
	  'colors': [{
	    'hex': '#E8112D',
	    'percent': 90.14
	  }, {
	    'hex': '#FFED00',
	    'percent': 5.26
	  }, {
	    'hex': '#F58E14',
	    'percent': 2.7
	  }, {
	    'hex': '#F05A1E',
	    'percent': 1.89
	  }]
	}, {
	  'name': 'Laos',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/56/Flag_of_Laos.svg/150px-Flag_of_Laos.svg.png',
	  'colors': [{
	    'hex': '#CE1126',
	    'percent': 50
	  }, {
	    'hex': '#002868',
	    'percent': 41.37
	  }, {
	    'hex': '#FEFFFF',
	    'percent': 8.17
	  }, {
	    'hex': '#879AB8',
	    'percent': 0.21
	  }, {
	    'hex': '#375788',
	    'percent': 0.15
	  }, {
	    'hex': '#ABB8CD',
	    'percent': 0.11
	  }]
	}, {
	  'name': 'Latvia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/84/Flag_of_Latvia.svg/200px-Flag_of_Latvia.svg.png',
	  'colors': [{
	    'hex': '#9E3039',
	    'percent': 80
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 20
	  }]
	}, {
	  'name': 'Lebanon',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/59/Flag_of_Lebanon.svg/150px-Flag_of_Lebanon.svg.png',
	  'colors': [{
	    'hex': '#ED1C24',
	    'percent': 50
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 42.07
	  }, {
	    'hex': '#01A652',
	    'percent': 5.9
	  }, {
	    'hex': '#8ED8B2',
	    'percent': 0.85
	  }, {
	    'hex': '#42BD7E',
	    'percent': 0.62
	  }, {
	    'hex': '#D7F1E4',
	    'percent': 0.56
	  }]
	}, {
	  'name': 'Lesotho',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Flag_of_Lesotho.svg/150px-Flag_of_Lesotho.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 35.98
	  }, {
	    'hex': '#00209F',
	    'percent': 30
	  }, {
	    'hex': '#009543',
	    'percent': 30
	  }, {
	    'hex': '#020202',
	    'percent': 2.43
	  }, {
	    'hex': '#2E2E2E',
	    'percent': 0.42
	  }, {
	    'hex': '#4E4E4E',
	    'percent': 0.26
	  }]
	}, {
	  'name': 'Liberia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b8/Flag_of_Liberia.svg/190px-Flag_of_Liberia.svg.png',
	  'colors': [{
	    'hex': '#BF0A30',
	    'percent': 44.06
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 38.85
	  }, {
	    'hex': '#002868',
	    'percent': 9.36
	  }, {
	    'hex': '#EAADBA',
	    'percent': 3.52
	  }, {
	    'hex': '#D96C83',
	    'percent': 1.93
	  }, {
	    'hex': '#CA3453',
	    'percent': 1.48
	  }]
	}, {
	  'name': 'Libya',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Flag_of_Libya.svg/200px-Flag_of_Libya.svg.png',
	  'colors': [{
	    'hex': '#000000',
	    'percent': 48.47
	  }, {
	    'hex': '#E70013',
	    'percent': 25
	  }, {
	    'hex': '#239E46',
	    'percent': 25
	  }, {
	    'hex': '#727272',
	    'percent': 0.21
	  }, {
	    'hex': '#313131',
	    'percent': 0.2
	  }, {
	    'hex': '#505050',
	    'percent': 0.11
	  }]
	}, {
	  'name': 'Liechtenstein',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/47/Flag_of_Liechtenstein.svg/167px-Flag_of_Liechtenstein.svg.png',
	  'colors': [{
	    'hex': '#CE1126',
	    'percent': 50
	  }, {
	    'hex': '#002B7F',
	    'percent': 46.28
	  }, {
	    'hex': '#BEA12E',
	    'percent': 1.09
	  }, {
	    'hex': '#F9D33C',
	    'percent': 0.88
	  }, {
	    'hex': '#826E1F',
	    'percent': 0.74
	  }, {
	    'hex': '#524615',
	    'percent': 0.66
	  }]
	}, {
	  'name': 'Lithuania',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Flag_of_Lithuania.svg/167px-Flag_of_Lithuania.svg.png',
	  'colors': [{
	    'hex': '#FDB913',
	    'percent': 33
	  }, {
	    'hex': '#C1272D',
	    'percent': 33
	  }, {
	    'hex': '#006A44',
	    'percent': 32
	  }, {
	    'hex': '#40543D',
	    'percent': 1
	  }, {
	    'hex': '#548533',
	    'percent': 1
	  }]
	}, {
	  'name': 'Luxembourg',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/da/Flag_of_Luxembourg.svg/167px-Flag_of_Luxembourg.svg.png',
	  'colors': [{
	    'hex': '#00A1DE',
	    'percent': 33
	  }, {
	    'hex': '#ED2939',
	    'percent': 33
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 32
	  }, {
	    'hex': '#F9B8BD',
	    'percent': 1
	  }, {
	    'hex': '#AAE0F4',
	    'percent': 1
	  }]
	}, {
	  'name': 'Macedonia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Flag_of_Macedonia.svg/200px-Flag_of_Macedonia.svg.png',
	  'colors': [{
	    'hex': '#D20000',
	    'percent': 65.35
	  }, {
	    'hex': '#FFE600',
	    'percent': 30.08
	  }, {
	    'hex': '#DC3400',
	    'percent': 2.11
	  }, {
	    'hex': '#F4AE00',
	    'percent': 1.85
	  }, {
	    'hex': '#E86F00',
	    'percent': 0.61
	  }]
	}, {
	  'name': 'Madagascar',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Flag_of_Madagascar.svg/150px-Flag_of_Madagascar.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 33.33
	  }, {
	    'hex': '#007E3A',
	    'percent': 33.33
	  }, {
	    'hex': '#FC3D32',
	    'percent': 33.33
	  }]
	}, {
	  'name': 'Malawi',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d1/Flag_of_Malawi.svg/150px-Flag_of_Malawi.svg.png',
	  'colors': [{
	    'hex': '#CE1126',
	    'percent': 36.31
	  }, {
	    'hex': '#339E35',
	    'percent': 33
	  }, {
	    'hex': '#000000',
	    'percent': 25.81
	  }, {
	    'hex': '#550710',
	    'percent': 2.93
	  }, {
	    'hex': '#6D3C23',
	    'percent': 1
	  }, {
	    'hex': '#8F0C1A',
	    'percent': 0.95
	  }]
	}, {
	  'name': 'Malaysia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/66/Flag_of_Malaysia.svg/200px-Flag_of_Malaysia.svg.png',
	  'colors': [{
	    'hex': '#CC0001',
	    'percent': 34
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 32.5
	  }, {
	    'hex': '#010066',
	    'percent': 23.35
	  }, {
	    'hex': '#E26E6F',
	    'percent': 3
	  }, {
	    'hex': '#F1B7B7',
	    'percent': 2
	  }, {
	    'hex': '#D4A911',
	    'percent': 0.81
	  }]
	}, {
	  'name': 'Maldives',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/Flag_of_Maldives.svg/150px-Flag_of_Maldives.svg.png',
	  'colors': [{
	    'hex': '#D21034',
	    'percent': 66.67
	  }, {
	    'hex': '#007E3A',
	    'percent': 31.69
	  }, {
	    'hex': '#C9E4D5',
	    'percent': 0.27
	  }, {
	    'hex': '#6FB690',
	    'percent': 0.15
	  }, {
	    'hex': '#379A64',
	    'percent': 0.06
	  }, {
	    'hex': '#29935A',
	    'percent': 0.06
	  }]
	}, {
	  'name': 'Mali',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Flag_of_Mali.svg/150px-Flag_of_Mali.svg.png',
	  'colors': [{
	    'hex': '#14B53A',
	    'percent': 33.33
	  }, {
	    'hex': '#CE1126',
	    'percent': 33.33
	  }, {
	    'hex': '#FCD116',
	    'percent': 33.33
	  }]
	}, {
	  'name': 'Malta',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Flag_of_Malta.svg/150px-Flag_of_Malta.svg.png',
	  'colors': [{
	    'hex': '#CF142B',
	    'percent': 50
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 47
	  }, {
	    'hex': '#A9A29C',
	    'percent': 0.96
	  }, {
	    'hex': '#F6A9B5',
	    'percent': 0.49
	  }, {
	    'hex': '#D36773',
	    'percent': 0.07
	  }, {
	    'hex': '#6F6E6E',
	    'percent': 0.01
	  }]
	}, {
	  'name': 'Marshall Islands',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/2e/Flag_of_the_Marshall_Islands.svg/190px-Flag_of_the_Marshall_Islands.svg.png',
	  'colors': [{
	    'hex': '#003893',
	    'percent': 73.03
	  }, {
	    'hex': '#FEFEFE',
	    'percent': 12.23
	  }, {
	    'hex': '#DD7500',
	    'percent': 9.99
	  }, {
	    'hex': '#CCD7E9',
	    'percent': 1.31
	  }, {
	    'hex': '#2958A4',
	    'percent': 1.25
	  }, {
	    'hex': '#90A8D0',
	    'percent': 1.09
	  }]
	}, {
	  'name': 'Mauritania',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Flag_of_Mauritania.svg/150px-Flag_of_Mauritania.svg.png',
	  'colors': [{
	    'hex': '#006233',
	    'percent': 93.78
	  }, {
	    'hex': '#FFC400',
	    'percent': 4.7
	  }, {
	    'hex': '#477D25',
	    'percent': 0.98
	  }, {
	    'hex': '#B4A70F',
	    'percent': 0.54
	  }]
	}, {
	  'name': 'Mauritius',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/77/Flag_of_Mauritius.svg/150px-Flag_of_Mauritius.svg.png',
	  'colors': [{
	    'hex': '#FFD500',
	    'percent': 25
	  }, {
	    'hex': '#00A551',
	    'percent': 25
	  }, {
	    'hex': '#EA2839',
	    'percent': 25
	  }, {
	    'hex': '#1A206D',
	    'percent': 25
	  }]
	}, {
	  'name': 'Mexico',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/fc/Flag_of_Mexico.svg/175px-Flag_of_Mexico.svg.png',
	  'colors': [{
	    'hex': '#006847',
	    'percent': 33.15
	  }, {
	    'hex': '#CE1126',
	    'percent': 33.15
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 26.74
	  }, {
	    'hex': '#EFB1B7',
	    'percent': 1.23
	  }, {
	    'hex': '#593520',
	    'percent': 1.12
	  }, {
	    'hex': '#925A2F',
	    'percent': 0.46
	  }]
	}, {
	  'name': 'FS Micronesia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e4/Flag_of_the_Federated_States_of_Micronesia.svg/190px-Flag_of_the_Federated_States_of_Micronesia.svg.png',
	  'colors': [{
	    'hex': '#75B2DD',
	    'percent': 97.43
	  }, {
	    'hex': '#FDFEFE',
	    'percent': 2.01
	  }, {
	    'hex': '#D2E6F4',
	    'percent': 0.56
	  }]
	}, {
	  'name': 'Moldova',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Flag_of_Moldova.svg/200px-Flag_of_Moldova.svg.png',
	  'colors': [{
	    'hex': '#CC092F',
	    'percent': 33.72
	  }, {
	    'hex': '#0046AE',
	    'percent': 33.52
	  }, {
	    'hex': '#FFD200',
	    'percent': 25.17
	  }, {
	    'hex': '#352815',
	    'percent': 1.78
	  }, {
	    'hex': '#AD7D54',
	    'percent': 1.72
	  }, {
	    'hex': '#674F21',
	    'percent': 1.01
	  }]
	}, {
	  'name': 'Monaco',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/ea/Flag_of_Monaco.svg/125px-Flag_of_Monaco.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 50
	  }, {
	    'hex': '#CE1126',
	    'percent': 50
	  }]
	}, {
	  'name': 'Mongolia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Flag_of_Mongolia.svg/200px-Flag_of_Mongolia.svg.png',
	  'colors': [{
	    'hex': '#C4272F',
	    'percent': 58.68
	  }, {
	    'hex': '#015197',
	    'percent': 33
	  }, {
	    'hex': '#F9CF02',
	    'percent': 5.42
	  }, {
	    'hex': '#833551',
	    'percent': 1
	  }, {
	    'hex': '#E69511',
	    'percent': 0.99
	  }, {
	    'hex': '#D66120',
	    'percent': 0.91
	  }]
	}, {
	  'name': 'Montenegro',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/64/Flag_of_Montenegro.svg/200px-Flag_of_Montenegro.svg.png',
	  'colors': [{
	    'hex': '#C40308',
	    'percent': 76.94
	  }, {
	    'hex': '#D3AD3B',
	    'percent': 21.23
	  }, {
	    'hex': '#C4722A',
	    'percent': 0.81
	  }, {
	    'hex': '#1D5E91',
	    'percent': 0.43
	  }, {
	    'hex': '#6E8B3E',
	    'percent': 0.42
	  }, {
	    'hex': '#626765',
	    'percent': 0.18
	  }]
	}, {
	  'name': 'Morocco',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/Flag_of_Morocco.svg/150px-Flag_of_Morocco.svg.png',
	  'colors': [{
	    'hex': '#C1272D',
	    'percent': 97.97
	  }, {
	    'hex': '#016233',
	    'percent': 1.54
	  }, {
	    'hex': '#684230',
	    'percent': 0.49
	  }]
	}, {
	  'name': 'Mozambique',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d0/Flag_of_Mozambique.svg/150px-Flag_of_Mozambique.svg.png',
	  'colors': [{
	    'hex': '#FCE100',
	    'percent': 27.92
	  }, {
	    'hex': '#007168',
	    'percent': 26.66
	  }, {
	    'hex': '#000000',
	    'percent': 19.46
	  }, {
	    'hex': '#D21034',
	    'percent': 17.48
	  }, {
	    'hex': '#D05B28',
	    'percent': 0.33
	  }, {
	    'hex': '#B1A33E',
	    'percent': 0.12
	  }]
	}, {
	  'name': 'Myanmar',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/8c/Flag_of_Myanmar.svg/150px-Flag_of_Myanmar.svg.png',
	  'colors': [{
	    'hex': '#FECB00',
	    'percent': 32.32
	  }, {
	    'hex': '#EA2839',
	    'percent': 31.06
	  }, {
	    'hex': '#34B233',
	    'percent': 24.47
	  }, {
	    'hex': '#FEFFFE',
	    'percent': 9.6
	  }, {
	    'hex': '#77BA22',
	    'percent': 0.92
	  }, {
	    'hex': '#708435',
	    'percent': 0.77
	  }]
	}, {
	  'name': 'Namibia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/00/Flag_of_Namibia.svg/150px-Flag_of_Namibia.svg.png',
	  'colors': [{
	    'hex': '#009543',
	    'percent': 31.77
	  }, {
	    'hex': '#003580',
	    'percent': 27.84
	  }, {
	    'hex': '#D21034',
	    'percent': 27.2
	  }, {
	    'hex': '#FEFDFD',
	    'percent': 7.13
	  }, {
	    'hex': '#FECD01',
	    'percent': 2.14
	  }, {
	    'hex': '#E05D75',
	    'percent': 0.55
	  }]
	}, {
	  'name': 'Nauru',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/30/Flag_of_Nauru.svg/200px-Flag_of_Nauru.svg.png',
	  'colors': [{
	    'hex': '#002B7F',
	    'percent': 87.47
	  }, {
	    'hex': '#FFC61E',
	    'percent': 8
	  }, {
	    'hex': '#334A6C',
	    'percent': 2.11
	  }, {
	    'hex': '#FEFEFE',
	    'percent': 1.87
	  }, {
	    'hex': '#738AB9',
	    'percent': 0.31
	  }, {
	    'hex': '#9AABCC',
	    'percent': 0.25
	  }]
	}, {
	  'name': 'Nepal',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/9b/Flag_of_Nepal.svg/164px-Flag_of_Nepal.svg.png',
	  'colors': [{
	    'hex': '#003A96',
	    'percent': 54.65
	  }, {
	    'hex': '#DC143C',
	    'percent': 35.93
	  }, {
	    'hex': '#FFFEFE',
	    'percent': 7.68
	  }, {
	    'hex': '#EA728A',
	    'percent': 0.42
	  }, {
	    'hex': '#F099AA',
	    'percent': 0.36
	  }, {
	    'hex': '#63286C',
	    'percent': 0.11
	  }]
	}, {
	  'name': 'Kingdom of the Netherlands',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/20/Flag_of_the_Netherlands.svg/150px-Flag_of_the_Netherlands.svg.png',
	  'colors': [{
	    'hex': '#AE1C28',
	    'percent': 33
	  }, {
	    'hex': '#21468B',
	    'percent': 33
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 32
	  }, {
	    'hex': '#E4B3B7',
	    'percent': 1
	  }, {
	    'hex': '#B6C2D9',
	    'percent': 1
	  }]
	}, {
	  'name': 'New Zealand',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3e/Flag_of_New_Zealand.svg/200px-Flag_of_New_Zealand.svg.png',
	  'colors': [{
	    'hex': '#00247D',
	    'percent': 79.32
	  }, {
	    'hex': '#CC142B',
	    'percent': 9.25
	  }, {
	    'hex': '#FEFDFE',
	    'percent': 7.18
	  }, {
	    'hex': '#546CA8',
	    'percent': 1.48
	  }, {
	    'hex': '#DDD9E6',
	    'percent': 1.34
	  }, {
	    'hex': '#2E4B95',
	    'percent': 0.2
	  }]
	}, {
	  'name': 'Nicaragua',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/19/Flag_of_Nicaragua.svg/167px-Flag_of_Nicaragua.svg.png',
	  'colors': [{
	    'hex': '#0067C6',
	    'percent': 66
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 29.68
	  }, {
	    'hex': '#ABCDEC',
	    'percent': 2.29
	  }, {
	    'hex': '#98C826',
	    'percent': 0.22
	  }, {
	    'hex': '#D0DB25',
	    'percent': 0.1
	  }, {
	    'hex': '#CF2425',
	    'percent': 0.02
	  }]
	}, {
	  'name': 'Niger',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/f4/Flag_of_Niger.svg/117px-Flag_of_Niger.svg.png',
	  'colors': [{
	    'hex': '#E05206',
	    'percent': 38.21
	  }, {
	    'hex': '#0DB02B',
	    'percent': 33
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 26.51
	  }, {
	    'hex': '#F5C5AC',
	    'percent': 1.02
	  }, {
	    'hex': '#AFE5B9',
	    'percent': 1
	  }, {
	    'hex': '#EEA279',
	    'percent': 0.26
	  }]
	}, {
	  'name': 'Nigeria',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/79/Flag_of_Nigeria.svg/200px-Flag_of_Nigeria.svg.png',
	  'colors': [{
	    'hex': '#008751',
	    'percent': 66
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 33
	  }, {
	    'hex': '#5AB18E',
	    'percent': 1
	  }]
	}, {
	  'name': 'Norway',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Flag_of_Norway.svg/138px-Flag_of_Norway.svg.png',
	  'colors': [{
	    'hex': '#EF2B2D',
	    'percent': 60.06
	  }, {
	    'hex': '#002868',
	    'percent': 19.65
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 15.13
	  }, {
	    'hex': '#F68E8F',
	    'percent': 2.16
	  }, {
	    'hex': '#BBC6D7',
	    'percent': 1.81
	  }, {
	    'hex': '#637CA3',
	    'percent': 0.01
	  }]
	}, {
	  'name': 'Oman',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Flag_of_Oman.svg/200px-Flag_of_Oman.svg.png',
	  'colors': [{
	    'hex': '#DB161B',
	    'percent': 47.35
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 25.82
	  }, {
	    'hex': '#008000',
	    'percent': 24.75
	  }, {
	    'hex': '#E76669',
	    'percent': 0.91
	  }, {
	    'hex': '#923A12',
	    'percent': 0.75
	  }, {
	    'hex': '#F3B0B2',
	    'percent': 0.43
	  }]
	}, {
	  'name': 'Pakistan',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/32/Flag_of_Pakistan.svg/150px-Flag_of_Pakistan.svg.png',
	  'colors': [{
	    'hex': '#01411C',
	    'percent': 67.65
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 30.16
	  }, {
	    'hex': '#82A18F',
	    'percent': 1.16
	  }, {
	    'hex': '#DDE6E1',
	    'percent': 0.46
	  }, {
	    'hex': '#47755A',
	    'percent': 0.33
	  }, {
	    'hex': '#235A3A',
	    'percent': 0.24
	  }]
	}, {
	  'name': 'Palau',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Flag_of_Palau.svg/160px-Flag_of_Palau.svg.png',
	  'colors': [{
	    'hex': '#4AADD6',
	    'percent': 82.04
	  }, {
	    'hex': '#FFDE00',
	    'percent': 17.13
	  }, {
	    'hex': '#D4D233',
	    'percent': 0.54
	  }, {
	    'hex': '#74B9A5',
	    'percent': 0.15
	  }, {
	    'hex': '#9AC377',
	    'percent': 0.13
	  }]
	}, {
	  'name': 'State of Palestine',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/00/Flag_of_Palestine.svg/200px-Flag_of_Palestine.svg.png',
	  'colors': [{
	    'hex': '#007A3D',
	    'percent': 29.32
	  }, {
	    'hex': '#000000',
	    'percent': 29.32
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 22.93
	  }, {
	    'hex': '#CE1126',
	    'percent': 16.46
	  }, {
	    'hex': '#D63849',
	    'percent': 0.07
	  }, {
	    'hex': '#E16C79',
	    'percent': 0.05
	  }]
	}, {
	  'name': 'Panama',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Flag_of_Panama.svg/150px-Flag_of_Panama.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 47.39
	  }, {
	    'hex': '#005293',
	    'percent': 26.07
	  }, {
	    'hex': '#D21034',
	    'percent': 26.06
	  }, {
	    'hex': '#EA90A1',
	    'percent': 0.16
	  }, {
	    'hex': '#5088B5',
	    'percent': 0.09
	  }, {
	    'hex': '#DF536D',
	    'percent': 0.07
	  }]
	}, {
	  'name': 'Papua New Guinea',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e3/Flag_of_Papua_New_Guinea.svg/133px-Flag_of_Papua_New_Guinea.svg.png',
	  'colors': [{
	    'hex': '#000000',
	    'percent': 47.39
	  }, {
	    'hex': '#CE1126',
	    'percent': 43.76
	  }, {
	    'hex': '#FCD016',
	    'percent': 4.71
	  }, {
	    'hex': '#EC8F1B',
	    'percent': 0.98
	  }, {
	    'hex': '#DC4D21',
	    'percent': 0.41
	  }, {
	    'hex': '#6E0914',
	    'percent': 0.33
	  }]
	}, {
	  'name': 'Paraguay',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Flag_of_Paraguay.svg/182px-Flag_of_Paraguay.svg.png',
	  'colors': [{
	    'hex': '#0038A8',
	    'percent': 33
	  }, {
	    'hex': '#D52B1E',
	    'percent': 33
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 29.89
	  }, {
	    'hex': '#ABBDE2',
	    'percent': 1.82
	  }, {
	    'hex': '#F1B8B4',
	    'percent': 1.03
	  }, {
	    'hex': '#309556',
	    'percent': 0.17
	  }]
	}, {
	  'name': 'Peru',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Flag_of_Peru.svg/150px-Flag_of_Peru.svg.png',
	  'colors': [{
	    'hex': '#D91023',
	    'percent': 66.67
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 33.33
	  }]
	}, {
	  'name': 'Philippines',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Flag_of_the_Philippines.svg/200px-Flag_of_the_Philippines.svg.png',
	  'colors': [{
	    'hex': '#CE1126',
	    'percent': 39.07
	  }, {
	    'hex': '#0038A8',
	    'percent': 39.01
	  }, {
	    'hex': '#FFFFFE',
	    'percent': 16.54
	  }, {
	    'hex': '#FCD116',
	    'percent': 2.68
	  }, {
	    'hex': '#FEEFAD',
	    'percent': 1.21
	  }, {
	    'hex': '#698ACC',
	    'percent': 0.11
	  }]
	}, {
	  'name': 'Poland',
	  'url': 'https://upload.wikimedia.org/wikipedia/en/thumb/1/12/Flag_of_Poland.svg/160px-Flag_of_Poland.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 50
	  }, {
	    'hex': '#DC143C',
	    'percent': 50
	  }]
	}, {
	  'name': 'Portugal',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Flag_of_Portugal.svg/150px-Flag_of_Portugal.svg.png',
	  'colors': [{
	    'hex': '#FF0000',
	    'percent': 55.75
	  }, {
	    'hex': '#006600',
	    'percent': 34.19
	  }, {
	    'hex': '#959E01',
	    'percent': 2.6
	  }, {
	    'hex': '#FDFDFE',
	    'percent': 1.47
	  }, {
	    'hex': '#2F59AC',
	    'percent': 0.43
	  }, {
	    'hex': '#BA5F41',
	    'percent': 0.05
	  }]
	}, {
	  'name': 'Qatar',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/Flag_of_Qatar.svg/255px-Flag_of_Qatar.svg.png',
	  'colors': [{
	    'hex': '#8D1B3D',
	    'percent': 66.21
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 32.75
	  }, {
	    'hex': '#B2657D',
	    'percent': 0.56
	  }, {
	    'hex': '#E5CAD2',
	    'percent': 0.48
	  }]
	}, {
	  'name': 'Romania',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Flag_of_Romania.svg/150px-Flag_of_Romania.svg.png',
	  'colors': [{
	    'hex': '#002B7F',
	    'percent': 33.33
	  }, {
	    'hex': '#CE1126',
	    'percent': 33.33
	  }, {
	    'hex': '#FCD116',
	    'percent': 33.33
	  }]
	}, {
	  'name': 'Russia',
	  'url': 'https://upload.wikimedia.org/wikipedia/en/thumb/f/f3/Flag_of_Russia.svg/150px-Flag_of_Russia.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 33
	  }, {
	    'hex': '#D52B1E',
	    'percent': 33
	  }, {
	    'hex': '#0039A6',
	    'percent': 32
	  }, {
	    'hex': '#463479',
	    'percent': 1
	  }, {
	    'hex': '#547AC3',
	    'percent': 1
	  }]
	}, {
	  'name': 'Rwanda',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/Flag_of_Rwanda.svg/150px-Flag_of_Rwanda.svg.png',
	  'colors': [{
	    'hex': '#00A1DE',
	    'percent': 47.41
	  }, {
	    'hex': '#FAD201',
	    'percent': 25.51
	  }, {
	    'hex': '#20603D',
	    'percent': 25
	  }, {
	    'hex': '#81B162',
	    'percent': 1.21
	  }, {
	    'hex': '#40A9A0',
	    'percent': 0.73
	  }, {
	    'hex': '#C2BA22',
	    'percent': 0.15
	  }]
	}, {
	  'name': 'Saint Kitts and Nevis',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/Flag_of_Saint_Kitts_and_Nevis.svg/150px-Flag_of_Saint_Kitts_and_Nevis.svg.png',
	  'colors': [{
	    'hex': '#000000',
	    'percent': 28.72
	  }, {
	    'hex': '#CE1126',
	    'percent': 27.87
	  }, {
	    'hex': '#009E49',
	    'percent': 27.63
	  }, {
	    'hex': '#FBD116',
	    'percent': 10.48
	  }, {
	    'hex': '#292929',
	    'percent': 0.21
	  }, {
	    'hex': '#474747',
	    'percent': 0.18
	  }]
	}, {
	  'name': 'Saint Lucia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/Flag_of_Saint_Lucia.svg/200px-Flag_of_Saint_Lucia.svg.png',
	  'colors': [{
	    'hex': '#66CCFF',
	    'percent': 85.93
	  }, {
	    'hex': '#FCD116',
	    'percent': 6.68
	  }, {
	    'hex': '#FDFEFE',
	    'percent': 3.02
	  }, {
	    'hex': '#665509',
	    'percent': 0.09
	  }, {
	    'hex': '#AD900F',
	    'percent': 0.08
	  }, {
	    'hex': '#FDDD56',
	    'percent': 0.03
	  }]
	}, {
	  'name': 'Saint Vincent and the Grenadines',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/6d/Flag_of_Saint_Vincent_and_the_Grenadines.svg/150px-Flag_of_Saint_Vincent_and_the_Grenadines.svg.png',
	  'colors': [{
	    'hex': '#FCD116',
	    'percent': 43.57
	  }, {
	    'hex': '#009E60',
	    'percent': 29.79
	  }, {
	    'hex': '#0072C6',
	    'percent': 24.67
	  }, {
	    'hex': '#7EB83B',
	    'percent': 1.31
	  }, {
	    'hex': '#7EA16E',
	    'percent': 0.67
	  }]
	}, {
	  'name': 'Samoa',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Flag_of_Samoa.svg/200px-Flag_of_Samoa.svg.png',
	  'colors': [{
	    'hex': '#CE1126',
	    'percent': 75
	  }, {
	    'hex': '#002B7F',
	    'percent': 23.66
	  }, {
	    'hex': '#FBFCFD',
	    'percent': 0.72
	  }, {
	    'hex': '#2F5297',
	    'percent': 0.33
	  }, {
	    'hex': '#6D86B6',
	    'percent': 0.21
	  }, {
	    'hex': '#BAC6DC',
	    'percent': 0.1
	  }]
	}, {
	  'name': 'San Marino',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/Flag_of_San_Marino.svg/133px-Flag_of_San_Marino.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 43.67
	  }, {
	    'hex': '#5EB6E4',
	    'percent': 42.98
	  }, {
	    'hex': '#86681D',
	    'percent': 2.69
	  }, {
	    'hex': '#364B36',
	    'percent': 2.56
	  }, {
	    'hex': '#D7A42E',
	    'percent': 1.16
	  }, {
	    'hex': '#9CCBE7',
	    'percent': 1.04
	  }]
	}, {
	  'name': 'São Tomé and Príncipe',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/4f/Flag_of_Sao_Tome_and_Principe.svg/200px-Flag_of_Sao_Tome_and_Principe.svg.png',
	  'colors': [{
	    'hex': '#12AD2B',
	    'percent': 51.94
	  }, {
	    'hex': '#FFCE00',
	    'percent': 30.83
	  }, {
	    'hex': '#D21034',
	    'percent': 12.25
	  }, {
	    'hex': '#78BB18',
	    'percent': 1.71
	  }, {
	    'hex': '#725E2F',
	    'percent': 0.28
	  }, {
	    'hex': '#E86F1A',
	    'percent': 0.21
	  }]
	}, {
	  'name': 'Saudi Arabia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/0d/Flag_of_Saudi_Arabia.svg/150px-Flag_of_Saudi_Arabia.svg.png',
	  'colors': [{
	    'hex': '#006C35',
	    'percent': 90.27
	  }, {
	    'hex': '#FBFDFC',
	    'percent': 5.12
	  }, {
	    'hex': '#8BBCA3',
	    'percent': 1.73
	  }, {
	    'hex': '#4C9872',
	    'percent': 1.73
	  }, {
	    'hex': '#B7D5C6',
	    'percent': 1.15
	  }]
	}, {
	  'name': 'Senegal',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/fd/Flag_of_Senegal.svg/150px-Flag_of_Senegal.svg.png',
	  'colors': [{
	    'hex': '#00853F',
	    'percent': 35.23
	  }, {
	    'hex': '#E31B23',
	    'percent': 33.33
	  }, {
	    'hex': '#FDEF42',
	    'percent': 31.15
	  }, {
	    'hex': '#71B540',
	    'percent': 0.22
	  }, {
	    'hex': '#ABCD41',
	    'percent': 0.07
	  }]
	}, {
	  'name': 'Serbia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Flag_of_Serbia.svg/150px-Flag_of_Serbia.svg.png',
	  'colors': [{
	    'hex': '#C6363C',
	    'percent': 32.76
	  }, {
	    'hex': '#0C4076',
	    'percent': 23.68
	  }, {
	    'hex': '#CF9E2E',
	    'percent': 2.04
	  }, {
	    'hex': '#B06232',
	    'percent': 1.11
	  }, {
	    'hex': '#CFA6A5',
	    'percent': 1.09
	  }, {
	    'hex': '#5C7FA3',
	    'percent': 1.01
	  }]
	}, {
	  'name': 'Seychelles',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/fc/Flag_of_Seychelles.svg/200px-Flag_of_Seychelles.svg.png',
	  'colors': [{
	    'hex': '#D62828',
	    'percent': 32.68
	  }, {
	    'hex': '#003F87',
	    'percent': 16.5
	  }, {
	    'hex': '#007A3D',
	    'percent': 16.34
	  }, {
	    'hex': '#FCD856',
	    'percent': 16.34
	  }, {
	    'hex': '#FFFEFE',
	    'percent': 16.04
	  }, {
	    'hex': '#3B996A',
	    'percent': 0.33
	  }]
	}, {
	  'name': 'Sierra Leone',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/Flag_of_Sierra_Leone.svg/150px-Flag_of_Sierra_Leone.svg.png',
	  'colors': [{
	    'hex': '#0072C6',
	    'percent': 33
	  }, {
	    'hex': '#1EB53A',
	    'percent': 33
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 32
	  }, {
	    'hex': '#B4E6BD',
	    'percent': 1
	  }, {
	    'hex': '#ABD1EC',
	    'percent': 1
	  }]
	}, {
	  'name': 'Singapore',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Flag_of_Singapore.svg/150px-Flag_of_Singapore.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 52.18
	  }, {
	    'hex': '#ED2939',
	    'percent': 46.69
	  }, {
	    'hex': '#F58C94',
	    'percent': 0.57
	  }, {
	    'hex': '#FBCCD0',
	    'percent': 0.55
	  }]
	}, {
	  'name': 'Slovakia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e6/Flag_of_Slovakia.svg/150px-Flag_of_Slovakia.svg.png',
	  'colors': [{
	    'hex': '#EE1C25',
	    'percent': 38.12
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 32.98
	  }, {
	    'hex': '#0B4EA2',
	    'percent': 25.46
	  }, {
	    'hex': '#5C89C1',
	    'percent': 0.89
	  }, {
	    'hex': '#F24C53',
	    'percent': 0.49
	  }, {
	    'hex': '#9B2E53',
	    'percent': 0.03
	  }]
	}, {
	  'name': 'Slovenia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/f0/Flag_of_Slovenia.svg/200px-Flag_of_Slovenia.svg.png',
	  'colors': [{
	    'hex': '#ED1C24',
	    'percent': 33.19
	  }, {
	    'hex': '#005DA4',
	    'percent': 32.27
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 31.72
	  }, {
	    'hex': '#5593C2',
	    'percent': 1.23
	  }, {
	    'hex': '#4E477A',
	    'percent': 1.12
	  }, {
	    'hex': '#B7B92E',
	    'percent': 0.02
	  }]
	}, {
	  'name': 'Solomon Islands',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/74/Flag_of_the_Solomon_Islands.svg/200px-Flag_of_the_Solomon_Islands.svg.png',
	  'colors': [{
	    'hex': '#215B33',
	    'percent': 44.65
	  }, {
	    'hex': '#0051BA',
	    'percent': 40.99
	  }, {
	    'hex': '#FCD116',
	    'percent': 8.8
	  }, {
	    'hex': '#FDFEFE',
	    'percent': 2.51
	  }, {
	    'hex': '#C3B21D',
	    'percent': 0.95
	  }, {
	    'hex': '#2F71C7',
	    'percent': 0.72
	  }]
	}, {
	  'name': 'Somalia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a0/Flag_of_Somalia.svg/150px-Flag_of_Somalia.svg.png',
	  'colors': [{
	    'hex': '#4189DD',
	    'percent': 95.29
	  }, {
	    'hex': '#FEFFFF',
	    'percent': 4.1
	  }, {
	    'hex': '#9AC0ED',
	    'percent': 0.61
	  }]
	}, {
	  'name': 'South Africa',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/af/Flag_of_South_Africa.svg/150px-Flag_of_South_Africa.svg.png',
	  'colors': [{
	    'hex': '#007A4D',
	    'percent': 30.66
	  }, {
	    'hex': '#002395',
	    'percent': 20.85
	  }, {
	    'hex': '#DE3831',
	    'percent': 20.85
	  }, {
	    'hex': '#FEFEFE',
	    'percent': 11.04
	  }, {
	    'hex': '#000000',
	    'percent': 8.8
	  }, {
	    'hex': '#FDB512',
	    'percent': 4.97
	  }]
	}, {
	  'name': 'South Sudan',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/7a/Flag_of_South_Sudan.svg/200px-Flag_of_South_Sudan.svg.png',
	  'colors': [{
	    'hex': '#078930',
	    'percent': 26.16
	  }, {
	    'hex': '#000000',
	    'percent': 26.06
	  }, {
	    'hex': '#0F47AF',
	    'percent': 19.89
	  }, {
	    'hex': '#DA121A',
	    'percent': 18.88
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 7.15
	  }, {
	    'hex': '#FBDC0A',
	    'percent': 1.36
	  }]
	}, {
	  'name': 'Spain',
	  'url': 'https://upload.wikimedia.org/wikipedia/en/thumb/9/9a/Flag_of_Spain.svg/150px-Flag_of_Spain.svg.png',
	  'colors': [{
	    'hex': '#C60B1E',
	    'percent': 50.01
	  }, {
	    'hex': '#FFC400',
	    'percent': 43.6
	  }, {
	    'hex': '#975C11',
	    'percent': 1.74
	  }, {
	    'hex': '#9E2918',
	    'percent': 1.37
	  }, {
	    'hex': '#B08F07',
	    'percent': 1.29
	  }, {
	    'hex': '#CEB56B',
	    'percent': 0.18
	  }]
	}, {
	  'name': 'Sri Lanka',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Flag_of_Sri_Lanka.svg/200px-Flag_of_Sri_Lanka.svg.png',
	  'colors': [{
	    'hex': '#FEB700',
	    'percent': 38.32
	  }, {
	    'hex': '#8D2029',
	    'percent': 32.72
	  }, {
	    'hex': '#005641',
	    'percent': 11.07
	  }, {
	    'hex': '#552D0A',
	    'percent': 2.75
	  }, {
	    'hex': '#B88301',
	    'percent': 1.37
	  }, {
	    'hex': '#B3511B',
	    'percent': 1.29
	  }]
	}, {
	  'name': 'Sudan',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/01/Flag_of_Sudan.svg/200px-Flag_of_Sudan.svg.png',
	  'colors': [{
	    'hex': '#000000',
	    'percent': 29.42
	  }, {
	    'hex': '#D21034',
	    'percent': 29.33
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 22.93
	  }, {
	    'hex': '#007229',
	    'percent': 16.46
	  }, {
	    'hex': '#2A894C',
	    'percent': 0.07
	  }, {
	    'hex': '#7E382F',
	    'percent': 0.04
	  }]
	}, {
	  'name': 'Suriname',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/60/Flag_of_Suriname.svg/150px-Flag_of_Suriname.svg.png',
	  'colors': [{
	    'hex': '#377E3F',
	    'percent': 40
	  }, {
	    'hex': '#B40A2D',
	    'percent': 36.57
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 20
	  }, {
	    'hex': '#ECC81D',
	    'percent': 2.87
	  }, {
	    'hex': '#C33B29',
	    'percent': 0.44
	  }, {
	    'hex': '#D16E25',
	    'percent': 0.12
	  }]
	}, {
	  'name': 'Swaziland',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/1e/Flag_of_Swaziland.svg/150px-Flag_of_Swaziland.svg.png',
	  'colors': [{
	    'hex': '#3E5EB9',
	    'percent': 37.53
	  }, {
	    'hex': '#B10C0C',
	    'percent': 32.4
	  }, {
	    'hex': '#FED800',
	    'percent': 12.67
	  }, {
	    'hex': '#FEFEFE',
	    'percent': 5.25
	  }, {
	    'hex': '#020202',
	    'percent': 5.11
	  }, {
	    'hex': '#5E5C61',
	    'percent': 1.08
	  }]
	}, {
	  'name': 'Sweden',
	  'url': 'https://upload.wikimedia.org/wikipedia/en/thumb/4/4c/Flag_of_Sweden.svg/160px-Flag_of_Sweden.svg.png',
	  'colors': [{
	    'hex': '#006AA7',
	    'percent': 70
	  }, {
	    'hex': '#FECC00',
	    'percent': 30
	  }]
	}, {
	  'name': 'Switzerland',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Flag_of_Switzerland.svg/100px-Flag_of_Switzerland.svg.png',
	  'colors': [{
	    'hex': '#FF0000',
	    'percent': 78.48
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 19.08
	  }, {
	    'hex': '#FF6060',
	    'percent': 2.4
	  }, {
	    'hex': '#FF9C9C',
	    'percent': 0.04
	  }]
	}, {
	  'name': 'Syria',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Flag_of_Syria.svg/150px-Flag_of_Syria.svg.png',
	  'colors': [{
	    'hex': '#000000',
	    'percent': 33
	  }, {
	    'hex': '#CE1126',
	    'percent': 33
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 29.73
	  }, {
	    'hex': '#EFB0B7',
	    'percent': 1
	  }, {
	    'hex': '#309361',
	    'percent': 0.23
	  }, {
	    'hex': '#70B492',
	    'percent': 0.11
	  }]
	}, {
	  'name': 'Tajikistan',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d0/Flag_of_Tajikistan.svg/200px-Flag_of_Tajikistan.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 40
	  }, {
	    'hex': '#006600',
	    'percent': 28
	  }, {
	    'hex': '#CC0000',
	    'percent': 28
	  }, {
	    'hex': '#F8C405',
	    'percent': 1.12
	  }, {
	    'hex': '#6EA86E',
	    'percent': 1
	  }, {
	    'hex': '#E26D6D',
	    'percent': 1
	  }]
	}, {
	  'name': 'Tanzania',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/38/Flag_of_Tanzania.svg/150px-Flag_of_Tanzania.svg.png',
	  'colors': [{
	    'hex': '#000000',
	    'percent': 28.92
	  }, {
	    'hex': '#1EB53A',
	    'percent': 28.89
	  }, {
	    'hex': '#00A3DD',
	    'percent': 28.88
	  }, {
	    'hex': '#FBD016',
	    'percent': 10.92
	  }, {
	    'hex': '#BEC548',
	    'percent': 0.26
	  }, {
	    'hex': '#93C327',
	    'percent': 0.25
	  }]
	}, {
	  'name': 'Thailand',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Flag_of_Thailand.svg/150px-Flag_of_Thailand.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 32
	  }, {
	    'hex': '#241D4F',
	    'percent': 32
	  }, {
	    'hex': '#ED1C24',
	    'percent': 32
	  }, {
	    'hex': '#6D688A',
	    'percent': 2
	  }, {
	    'hex': '#F3686D',
	    'percent': 2
	  }]
	}, {
	  'name': 'Togo',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/68/Flag_of_Togo.svg/162px-Flag_of_Togo.svg.png',
	  'colors': [{
	    'hex': '#006A4E',
	    'percent': 45.17
	  }, {
	    'hex': '#FFCE00',
	    'percent': 32.59
	  }, {
	    'hex': '#D21034',
	    'percent': 19.6
	  }, {
	    'hex': '#FFFDFD',
	    'percent': 2.38
	  }, {
	    'hex': '#F2BAC4',
	    'percent': 0.15
	  }, {
	    'hex': '#E2647B',
	    'percent': 0.1
	  }]
	}, {
	  'name': 'Tonga',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Flag_of_Tonga.svg/200px-Flag_of_Tonga.svg.png',
	  'colors': [{
	    'hex': '#C10000',
	    'percent': 82.66
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 16.54
	  }, {
	    'hex': '#D65555',
	    'percent': 0.49
	  }, {
	    'hex': '#EFBFBF',
	    'percent': 0.24
	  }, {
	    'hex': '#E49090',
	    'percent': 0.07
	  }]
	}, {
	  'name': 'Trinidad and Tobago',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/64/Flag_of_Trinidad_and_Tobago.svg/167px-Flag_of_Trinidad_and_Tobago.svg.png',
	  'colors': [{
	    'hex': '#CE1126',
	    'percent': 68.95
	  }, {
	    'hex': '#000000',
	    'percent': 19.65
	  }, {
	    'hex': '#FEFDFE',
	    'percent': 9.19
	  }, {
	    'hex': '#DF6371',
	    'percent': 0.34
	  }, {
	    'hex': '#E78893',
	    'percent': 0.32
	  }, {
	    'hex': '#EEADB4',
	    'percent': 0.16
	  }]
	}, {
	  'name': 'Tunisia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/ce/Flag_of_Tunisia.svg/150px-Flag_of_Tunisia.svg.png',
	  'colors': [{
	    'hex': '#E70013',
	    'percent': 89.93
	  }, {
	    'hex': '#FFFEFE',
	    'percent': 8.77
	  }, {
	    'hex': '#F16C77',
	    'percent': 1.01
	  }, {
	    'hex': '#F7ADB4',
	    'percent': 0.21
	  }, {
	    'hex': '#EC3847',
	    'percent': 0.09
	  }]
	}, {
	  'name': 'Turkey',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Flag_of_Turkey.svg/150px-Flag_of_Turkey.svg.png',
	  'colors': [{
	    'hex': '#E30A17',
	    'percent': 93.37
	  }, {
	    'hex': '#FFFEFE',
	    'percent': 5.2
	  }, {
	    'hex': '#F9CDD0',
	    'percent': 0.57
	  }, {
	    'hex': '#EF7279',
	    'percent': 0.57
	  }, {
	    'hex': '#EA4953',
	    'percent': 0.29
	  }]
	}, {
	  'name': 'Turkmenistan',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Flag_of_Turkmenistan.svg/150px-Flag_of_Turkmenistan.svg.png',
	  'colors': [{
	    'hex': '#28AE66',
	    'percent': 82.73
	  }, {
	    'hex': '#C93745',
	    'percent': 9.52
	  }, {
	    'hex': '#B47134',
	    'percent': 4.13
	  }, {
	    'hex': '#60654E',
	    'percent': 1.11
	  }, {
	    'hex': '#65BE8E',
	    'percent': 0.46
	  }, {
	    'hex': '#AE915A',
	    'percent': 0.2
	  }]
	}, {
	  'name': 'Tuvalu',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/38/Flag_of_Tuvalu.svg/200px-Flag_of_Tuvalu.svg.png',
	  'colors': [{
	    'hex': '#5B97B1',
	    'percent': 72.24
	  }, {
	    'hex': '#CF142B',
	    'percent': 8.82
	  }, {
	    'hex': '#FEFEFE',
	    'percent': 7.16
	  }, {
	    'hex': '#00247D',
	    'percent': 6.2
	  }, {
	    'hex': '#FCCD03',
	    'percent': 2.95
	  }, {
	    'hex': '#B2B452',
	    'percent': 1.03
	  }]
	}, {
	  'name': 'Uganda',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Flag_of_Uganda.svg/150px-Flag_of_Uganda.svg.png',
	  'colors': [{
	    'hex': '#FCDC04',
	    'percent': 32.01
	  }, {
	    'hex': '#000000',
	    'percent': 29.55
	  }, {
	    'hex': '#D90000',
	    'percent': 29.43
	  }, {
	    'hex': '#FEFDFD',
	    'percent': 3.24
	  }, {
	    'hex': '#544901',
	    'percent': 2
	  }, {
	    'hex': '#C4A636',
	    'percent': 0.02
	  }]
	}, {
	  'name': 'Ukraine',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/Flag_of_Ukraine.svg/150px-Flag_of_Ukraine.svg.png',
	  'colors': [{
	    'hex': '#FFD500',
	    'percent': 50
	  }, {
	    'hex': '#005BBB',
	    'percent': 50
	  }]
	}, {
	  'name': 'United Arab Emirates',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/cb/Flag_of_the_United_Arab_Emirates.svg/200px-Flag_of_the_United_Arab_Emirates.svg.png',
	  'colors': [{
	    'hex': '#FF0000',
	    'percent': 25
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 24.75
	  }, {
	    'hex': '#000000',
	    'percent': 24.75
	  }, {
	    'hex': '#00732F',
	    'percent': 24.75
	  }, {
	    'hex': '#929292',
	    'percent': 0.75
	  }]
	}, {
	  'name': 'United Kingdom',
	  'url': 'https://upload.wikimedia.org/wikipedia/en/thumb/a/ae/Flag_of_the_United_Kingdom.svg/200px-Flag_of_the_United_Kingdom.svg.png',
	  'colors': [{
	    'hex': '#CF142B',
	    'percent': 36.09
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 31.36
	  }, {
	    'hex': '#F3C4CA',
	    'percent': 1.54
	  }, {
	    'hex': '#AAB6D4',
	    'percent': 1.48
	  }, {
	    'hex': '#DB4F60',
	    'percent': 1.25
	  }, {
	    'hex': '#6E82B5',
	    'percent': 1.04
	  }]
	}, {
	  'name': 'United States',
	  'url': 'https://upload.wikimedia.org/wikipedia/en/thumb/a/a4/Flag_of_the_United_States.svg/190px-Flag_of_the_United_States.svg.png',
	  'colors': [{
	    'hex': '#B22234',
	    'percent': 37.2
	  }, {
	    'hex': '#FEFEFE',
	    'percent': 33.99
	  }, {
	    'hex': '#3C3B6E',
	    'percent': 18.11
	  }, {
	    'hex': '#CA6673',
	    'percent': 4.4
	  }, {
	    'hex': '#EDCDD1',
	    'percent': 3.18
	  }, {
	    'hex': '#DC9AA2',
	    'percent': 1.6
	  }]
	}, {
	  'name': 'Uruguay',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/Flag_of_Uruguay.svg/150px-Flag_of_Uruguay.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 55.07
	  }, {
	    'hex': '#9E830E',
	    'percent': 2.27
	  }, {
	    'hex': '#C6D3EC',
	    'percent': 2.14
	  }, {
	    'hex': '#8DA6D8',
	    'percent': 1.77
	  }, {
	    'hex': '#F8CE16',
	    'percent': 1.76
	  }, {
	    'hex': '#547AC5',
	    'percent': 1.63
	  }]
	}, {
	  'name': 'Uzbekistan',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/84/Flag_of_Uzbekistan.svg/200px-Flag_of_Uzbekistan.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 32.73
	  }, {
	    'hex': '#1EB53A',
	    'percent': 32
	  }, {
	    'hex': '#0099B5',
	    'percent': 30.73
	  }, {
	    'hex': '#CE1126',
	    'percent': 4
	  }, {
	    'hex': '#4EB8CC',
	    'percent': 0.34
	  }, {
	    'hex': '#89D0DD',
	    'percent': 0.21
	  }]
	}, {
	  'name': 'Vanuatu',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Flag_of_Vanuatu.svg/167px-Flag_of_Vanuatu.svg.png',
	  'colors': [{
	    'hex': '#009543',
	    'percent': 31.22
	  }, {
	    'hex': '#D21034',
	    'percent': 31.14
	  }, {
	    'hex': '#010100',
	    'percent': 25.81
	  }, {
	    'hex': '#FCCE12',
	    'percent': 8.53
	  }, {
	    'hex': '#A6870B',
	    'percent': 2.02
	  }, {
	    'hex': '#7A6308',
	    'percent': 1.05
	  }]
	}, {
	  'name': 'Vatican City',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/00/Flag_of_the_Vatican_City.svg/100px-Flag_of_the_Vatican_City.svg.png',
	  'colors': [{
	    'hex': '#FFE000',
	    'percent': 50
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 41.48
	  }, {
	    'hex': '#D1D0CE',
	    'percent': 4.14
	  }, {
	    'hex': '#AA9A68',
	    'percent': 2.08
	  }, {
	    'hex': '#B2890F',
	    'percent': 1.97
	  }, {
	    'hex': '#9C2C20',
	    'percent': 0.22
	  }]
	}, {
	  'name': 'Venezuela',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Flag_of_Venezuela.svg/150px-Flag_of_Venezuela.svg.png',
	  'colors': [{
	    'hex': '#FFCC00',
	    'percent': 33
	  }, {
	    'hex': '#CF142B',
	    'percent': 33
	  }, {
	    'hex': '#00247D',
	    'percent': 30.35
	  }, {
	    'hex': '#555C53',
	    'percent': 1
	  }, {
	    'hex': '#441F62',
	    'percent': 1
	  }, {
	    'hex': '#2E4B94',
	    'percent': 0.15
	  }]
	}, {
	  'name': 'Vietnam',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Flag_of_Vietnam.svg/150px-Flag_of_Vietnam.svg.png',
	  'colors': [{
	    'hex': '#DA251D',
	    'percent': 92.66
	  }, {
	    'hex': '#FFFE00',
	    'percent': 6.51
	  }, {
	    'hex': '#E67013',
	    'percent': 0.83
	  }]
	}, {
	  'name': 'Yemen',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/89/Flag_of_Yemen.svg/150px-Flag_of_Yemen.svg.png',
	  'colors': [{
	    'hex': '#000000',
	    'percent': 33
	  }, {
	    'hex': '#CE1126',
	    'percent': 33
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 32
	  }, {
	    'hex': '#ABABAB',
	    'percent': 1
	  }, {
	    'hex': '#EFB0B7',
	    'percent': 1
	  }]
	}, {
	  'name': 'Zambia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Flag_of_Zambia.svg/150px-Flag_of_Zambia.svg.png',
	  'colors': [{
	    'hex': '#198A00',
	    'percent': 74.11
	  }, {
	    'hex': '#EF7D00',
	    'percent': 7.71
	  }, {
	    'hex': '#DE2010',
	    'percent': 7.25
	  }, {
	    'hex': '#000000',
	    'percent': 7.23
	  }, {
	    'hex': '#904F05',
	    'percent': 1.1
	  }, {
	    'hex': '#4C6C02',
	    'percent': 0.71
	  }]
	}, {
	  'name': 'Zimbabwe',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Flag_of_Zimbabwe.svg/200px-Flag_of_Zimbabwe.svg.png',
	  'colors': [{
	    'hex': '#319208',
	    'percent': 26.21
	  }, {
	    'hex': '#DE2010',
	    'percent': 22.07
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 11.23
	  }, {
	    'hex': '#000000',
	    'percent': 10.64
	  }, {
	    'hex': '#C5C002',
	    'percent': 2.31
	  }, {
	    'hex': '#F18507',
	    'percent': 1.48
	  }]
	}, {
	  'name': 'Abkhazia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Flag_of_Abkhazia.svg/200px-Flag_of_Abkhazia.svg.png',
	  'colors': [{
	    'hex': '#00993E',
	    'percent': 45.36
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 36.24
	  }, {
	    'hex': '#C8312A',
	    'percent': 14.23
	  }, {
	    'hex': '#B7E2C9',
	    'percent': 1.62
	  }, {
	    'hex': '#92D3AD',
	    'percent': 1.62
	  }, {
	    'hex': '#D5635E',
	    'percent': 0.41
	  }]
	}, {
	  'name': 'Cook Islands',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/Flag_of_the_Cook_Islands.svg/200px-Flag_of_the_Cook_Islands.svg.png',
	  'colors': [{
	    'hex': '#00247D',
	    'percent': 74.99
	  }, {
	    'hex': '#FDFDFE',
	    'percent': 11.69
	  }, {
	    'hex': '#CF142B',
	    'percent': 8.82
	  }, {
	    'hex': '#546CA7',
	    'percent': 2.18
	  }, {
	    'hex': '#304D96',
	    'percent': 0.5
	  }, {
	    'hex': '#DC5364',
	    'percent': 0.41
	  }]
	}, {
	  'name': 'Kosovo',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/1f/Flag_of_Kosovo.svg/140px-Flag_of_Kosovo.svg.png',
	  'colors': [{
	    'hex': '#244AA5',
	    'percent': 87.19
	  }, {
	    'hex': '#D0A650',
	    'percent': 9.8
	  }, {
	    'hex': '#FBFCFE',
	    'percent': 1.33
	  }, {
	    'hex': '#A7B7DB',
	    'percent': 0.46
	  }, {
	    'hex': '#748CC6',
	    'percent': 0.32
	  }, {
	    'hex': '#A79064',
	    'percent': 0.2
	  }]
	}, {
	  'name': 'Nagorno-Karabakh Republic',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/8d/Flag_of_Nagorno-Karabakh.svg/200px-Flag_of_Nagorno-Karabakh.svg.png',
	  'colors': [{
	    'hex': '#F2A800',
	    'percent': 27.83
	  }, {
	    'hex': '#D90012',
	    'percent': 27.82
	  }, {
	    'hex': '#0033A0',
	    'percent': 27.06
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 14
	  }, {
	    'hex': '#482271',
	    'percent': 0.78
	  }, {
	    'hex': '#E13947',
	    'percent': 0.33
	  }]
	}, {
	  'name': 'Niue',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/01/Flag_of_Niue.svg/200px-Flag_of_Niue.svg.png',
	  'colors': [{
	    'hex': '#FCD116',
	    'percent': 75.8
	  }, {
	    'hex': '#FEFEFE',
	    'percent': 7.05
	  }, {
	    'hex': '#CF142B',
	    'percent': 7.03
	  }, {
	    'hex': '#002868',
	    'percent': 6.73
	  }, {
	    'hex': '#506B97',
	    'percent': 1.23
	  }, {
	    'hex': '#D95F25',
	    'percent': 0.19
	  }]
	}, {
	  'name': 'Northern Cyprus',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/1e/Flag_of_the_Turkish_Republic_of_Northern_Cyprus.svg/150px-Flag_of_the_Turkish_Republic_of_Northern_Cyprus.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 73.57
	  }, {
	    'hex': '#E30A17',
	    'percent': 25.28
	  }, {
	    'hex': '#EA4B55',
	    'percent': 0.92
	  }, {
	    'hex': '#F6AEB2',
	    'percent': 0.23
	  }]
	}, {
	  'name': 'Sahrawi Arab Democratic Republic',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/26/Flag_of_the_Sahrawi_Arab_Democratic_Republic.svg/200px-Flag_of_the_Sahrawi_Arab_Democratic_Republic.svg.png',
	  'colors': [{
	    'hex': '#000000',
	    'percent': 29.33
	  }, {
	    'hex': '#007A3D',
	    'percent': 29.32
	  }, {
	    'hex': '#FFFFFF',
	    'percent': 21.4
	  }, {
	    'hex': '#C4111B',
	    'percent': 17.33
	  }, {
	    'hex': '#CE3A42',
	    'percent': 0.31
	  }, {
	    'hex': '#DA6B71',
	    'percent': 0.12
	  }]
	}, {
	  'name': 'Somaliland',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Flag_of_Somaliland.svg/200px-Flag_of_Somaliland.svg.png',
	  'colors': [{
	    'hex': '#020202',
	    'percent': 94.58
	  }, {
	    'hex': '#006D21',
	    'percent': 5.13
	  }, {
	    'hex': '#9B9F9C',
	    'percent': 0.25
	  }, {
	    'hex': '#2C2C2C',
	    'percent': 0.03
	  }, {
	    'hex': '#6D6D6D',
	    'percent': 0.02
	  }]
	}, {
	  'name': 'South Ossetia',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/12/Flag_of_South_Ossetia.svg/200px-Flag_of_South_Ossetia.svg.png',
	  'colors': [{
	    'hex': '#FFFFFF',
	    'percent': 33
	  }, {
	    'hex': '#FFDF00',
	    'percent': 33
	  }, {
	    'hex': '#FF0000',
	    'percent': 32
	  }, {
	    'hex': '#FF5454',
	    'percent': 1
	  }, {
	    'hex': '#FF8238',
	    'percent': 1
	  }]
	}, {
	  'name': 'Taiwan',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/72/Flag_of_the_Republic_of_China.svg/150px-Flag_of_the_Republic_of_China.svg.png',
	  'colors': [{
	    'hex': '#FE0000',
	    'percent': 75
	  }, {
	    'hex': '#000095',
	    'percent': 21.31
	  }, {
	    'hex': '#FEFEFE',
	    'percent': 2.45
	  }, {
	    'hex': '#6666BF',
	    'percent': 0.5
	  }, {
	    'hex': '#CECEEB',
	    'percent': 0.43
	  }, {
	    'hex': '#ABABDC',
	    'percent': 0.31
	  }]
	}, {
	  'name': 'Transnistria',
	  'url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Flag_of_Transnistria_%28state%29.svg/200px-Flag_of_Transnistria_%28state%29.svg.png',
	  'colors': [{
	    'hex': '#DE0000',
	    'percent': 73.13
	  }, {
	    'hex': '#009933',
	    'percent': 24
	  }, {
	    'hex': '#6F4D1A',
	    'percent': 2
	  }, {
	    'hex': '#FED200',
	    'percent': 0.51
	  }, {
	    'hex': '#F48E00',
	    'percent': 0.37
	  }]
	}]


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * Isotope v3.0.4
	 *
	 * Licensed GPLv3 for open source use
	 * or Isotope Commercial License for commercial use
	 *
	 * http://isotope.metafizzy.co
	 * Copyright 2017 Metafizzy
	 */

	( function( window, factory ) {
	  // universal module definition
	  /* jshint strict: false */ /*globals define, module, require */
	  if ( true ) {
	    // AMD
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
	        __webpack_require__(6),
	        __webpack_require__(3),
	        __webpack_require__(4),
	        __webpack_require__(5),
	        __webpack_require__(14),
	        __webpack_require__(9),
	        // include default layout modes
	        __webpack_require__(10),
	        __webpack_require__(12),
	        __webpack_require__(13)
	      ], __WEBPACK_AMD_DEFINE_RESULT__ = function( Outlayer, getSize, matchesSelector, utils, Item, LayoutMode ) {
	        return factory( window, Outlayer, getSize, matchesSelector, utils, Item, LayoutMode );
	      }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof module == 'object' && module.exports ) {
	    // CommonJS
	    module.exports = factory(
	      window,
	      require('outlayer'),
	      require('get-size'),
	      require('desandro-matches-selector'),
	      require('fizzy-ui-utils'),
	      require('./item'),
	      require('./layout-mode'),
	      // include default layout modes
	      require('./layout-modes/masonry'),
	      require('./layout-modes/fit-rows'),
	      require('./layout-modes/vertical')
	    );
	  } else {
	    // browser global
	    window.Isotope = factory(
	      window,
	      window.Outlayer,
	      window.getSize,
	      window.matchesSelector,
	      window.fizzyUIUtils,
	      window.Isotope.Item,
	      window.Isotope.LayoutMode
	    );
	  }

	}( window, function factory( window, Outlayer, getSize, matchesSelector, utils,
	  Item, LayoutMode ) {

	'use strict';

	// -------------------------- vars -------------------------- //

	var jQuery = window.jQuery;

	// -------------------------- helpers -------------------------- //

	var trim = String.prototype.trim ?
	  function( str ) {
	    return str.trim();
	  } :
	  function( str ) {
	    return str.replace( /^\s+|\s+$/g, '' );
	  };

	// -------------------------- isotopeDefinition -------------------------- //

	  // create an Outlayer layout class
	  var Isotope = Outlayer.create( 'isotope', {
	    layoutMode: 'masonry',
	    isJQueryFiltering: true,
	    sortAscending: true
	  });

	  Isotope.Item = Item;
	  Isotope.LayoutMode = LayoutMode;

	  var proto = Isotope.prototype;

	  proto._create = function() {
	    this.itemGUID = 0;
	    // functions that sort items
	    this._sorters = {};
	    this._getSorters();
	    // call super
	    Outlayer.prototype._create.call( this );

	    // create layout modes
	    this.modes = {};
	    // start filteredItems with all items
	    this.filteredItems = this.items;
	    // keep of track of sortBys
	    this.sortHistory = [ 'original-order' ];
	    // create from registered layout modes
	    for ( var name in LayoutMode.modes ) {
	      this._initLayoutMode( name );
	    }
	  };

	  proto.reloadItems = function() {
	    // reset item ID counter
	    this.itemGUID = 0;
	    // call super
	    Outlayer.prototype.reloadItems.call( this );
	  };

	  proto._itemize = function() {
	    var items = Outlayer.prototype._itemize.apply( this, arguments );
	    // assign ID for original-order
	    for ( var i=0; i < items.length; i++ ) {
	      var item = items[i];
	      item.id = this.itemGUID++;
	    }
	    this._updateItemsSortData( items );
	    return items;
	  };


	  // -------------------------- layout -------------------------- //

	  proto._initLayoutMode = function( name ) {
	    var Mode = LayoutMode.modes[ name ];
	    // set mode options
	    // HACK extend initial options, back-fill in default options
	    var initialOpts = this.options[ name ] || {};
	    this.options[ name ] = Mode.options ?
	      utils.extend( Mode.options, initialOpts ) : initialOpts;
	    // init layout mode instance
	    this.modes[ name ] = new Mode( this );
	  };


	  proto.layout = function() {
	    // if first time doing layout, do all magic
	    if ( !this._isLayoutInited && this._getOption('initLayout') ) {
	      this.arrange();
	      return;
	    }
	    this._layout();
	  };

	  // private method to be used in layout() & magic()
	  proto._layout = function() {
	    // don't animate first layout
	    var isInstant = this._getIsInstant();
	    // layout flow
	    this._resetLayout();
	    this._manageStamps();
	    this.layoutItems( this.filteredItems, isInstant );

	    // flag for initalized
	    this._isLayoutInited = true;
	  };

	  // filter + sort + layout
	  proto.arrange = function( opts ) {
	    // set any options pass
	    this.option( opts );
	    this._getIsInstant();
	    // filter, sort, and layout

	    // filter
	    var filtered = this._filter( this.items );
	    this.filteredItems = filtered.matches;

	    this._bindArrangeComplete();

	    if ( this._isInstant ) {
	      this._noTransition( this._hideReveal, [ filtered ] );
	    } else {
	      this._hideReveal( filtered );
	    }

	    this._sort();
	    this._layout();
	  };
	  // alias to _init for main plugin method
	  proto._init = proto.arrange;

	  proto._hideReveal = function( filtered ) {
	    this.reveal( filtered.needReveal );
	    this.hide( filtered.needHide );
	  };

	  // HACK
	  // Don't animate/transition first layout
	  // Or don't animate/transition other layouts
	  proto._getIsInstant = function() {
	    var isLayoutInstant = this._getOption('layoutInstant');
	    var isInstant = isLayoutInstant !== undefined ? isLayoutInstant :
	      !this._isLayoutInited;
	    this._isInstant = isInstant;
	    return isInstant;
	  };

	  // listen for layoutComplete, hideComplete and revealComplete
	  // to trigger arrangeComplete
	  proto._bindArrangeComplete = function() {
	    // listen for 3 events to trigger arrangeComplete
	    var isLayoutComplete, isHideComplete, isRevealComplete;
	    var _this = this;
	    function arrangeParallelCallback() {
	      if ( isLayoutComplete && isHideComplete && isRevealComplete ) {
	        _this.dispatchEvent( 'arrangeComplete', null, [ _this.filteredItems ] );
	      }
	    }
	    this.once( 'layoutComplete', function() {
	      isLayoutComplete = true;
	      arrangeParallelCallback();
	    });
	    this.once( 'hideComplete', function() {
	      isHideComplete = true;
	      arrangeParallelCallback();
	    });
	    this.once( 'revealComplete', function() {
	      isRevealComplete = true;
	      arrangeParallelCallback();
	    });
	  };

	  // -------------------------- filter -------------------------- //

	  proto._filter = function( items ) {
	    var filter = this.options.filter;
	    filter = filter || '*';
	    var matches = [];
	    var hiddenMatched = [];
	    var visibleUnmatched = [];

	    var test = this._getFilterTest( filter );

	    // test each item
	    for ( var i=0; i < items.length; i++ ) {
	      var item = items[i];
	      if ( item.isIgnored ) {
	        continue;
	      }
	      // add item to either matched or unmatched group
	      var isMatched = test( item );
	      // item.isFilterMatched = isMatched;
	      // add to matches if its a match
	      if ( isMatched ) {
	        matches.push( item );
	      }
	      // add to additional group if item needs to be hidden or revealed
	      if ( isMatched && item.isHidden ) {
	        hiddenMatched.push( item );
	      } else if ( !isMatched && !item.isHidden ) {
	        visibleUnmatched.push( item );
	      }
	    }

	    // return collections of items to be manipulated
	    return {
	      matches: matches,
	      needReveal: hiddenMatched,
	      needHide: visibleUnmatched
	    };
	  };

	  // get a jQuery, function, or a matchesSelector test given the filter
	  proto._getFilterTest = function( filter ) {
	    if ( jQuery && this.options.isJQueryFiltering ) {
	      // use jQuery
	      return function( item ) {
	        return jQuery( item.element ).is( filter );
	      };
	    }
	    if ( typeof filter == 'function' ) {
	      // use filter as function
	      return function( item ) {
	        return filter( item.element );
	      };
	    }
	    // default, use filter as selector string
	    return function( item ) {
	      return matchesSelector( item.element, filter );
	    };
	  };

	  // -------------------------- sorting -------------------------- //

	  /**
	   * @params {Array} elems
	   * @public
	   */
	  proto.updateSortData = function( elems ) {
	    // get items
	    var items;
	    if ( elems ) {
	      elems = utils.makeArray( elems );
	      items = this.getItems( elems );
	    } else {
	      // update all items if no elems provided
	      items = this.items;
	    }

	    this._getSorters();
	    this._updateItemsSortData( items );
	  };

	  proto._getSorters = function() {
	    var getSortData = this.options.getSortData;
	    for ( var key in getSortData ) {
	      var sorter = getSortData[ key ];
	      this._sorters[ key ] = mungeSorter( sorter );
	    }
	  };

	  /**
	   * @params {Array} items - of Isotope.Items
	   * @private
	   */
	  proto._updateItemsSortData = function( items ) {
	    // do not update if no items
	    var len = items && items.length;

	    for ( var i=0; len && i < len; i++ ) {
	      var item = items[i];
	      item.updateSortData();
	    }
	  };

	  // ----- munge sorter ----- //

	  // encapsulate this, as we just need mungeSorter
	  // other functions in here are just for munging
	  var mungeSorter = ( function() {
	    // add a magic layer to sorters for convienent shorthands
	    // `.foo-bar` will use the text of .foo-bar querySelector
	    // `[foo-bar]` will use attribute
	    // you can also add parser
	    // `.foo-bar parseInt` will parse that as a number
	    function mungeSorter( sorter ) {
	      // if not a string, return function or whatever it is
	      if ( typeof sorter != 'string' ) {
	        return sorter;
	      }
	      // parse the sorter string
	      var args = trim( sorter ).split(' ');
	      var query = args[0];
	      // check if query looks like [an-attribute]
	      var attrMatch = query.match( /^\[(.+)\]$/ );
	      var attr = attrMatch && attrMatch[1];
	      var getValue = getValueGetter( attr, query );
	      // use second argument as a parser
	      var parser = Isotope.sortDataParsers[ args[1] ];
	      // parse the value, if there was a parser
	      sorter = parser ? function( elem ) {
	        return elem && parser( getValue( elem ) );
	      } :
	      // otherwise just return value
	      function( elem ) {
	        return elem && getValue( elem );
	      };

	      return sorter;
	    }

	    // get an attribute getter, or get text of the querySelector
	    function getValueGetter( attr, query ) {
	      // if query looks like [foo-bar], get attribute
	      if ( attr ) {
	        return function getAttribute( elem ) {
	          return elem.getAttribute( attr );
	        };
	      }

	      // otherwise, assume its a querySelector, and get its text
	      return function getChildText( elem ) {
	        var child = elem.querySelector( query );
	        return child && child.textContent;
	      };
	    }

	    return mungeSorter;
	  })();

	  // parsers used in getSortData shortcut strings
	  Isotope.sortDataParsers = {
	    'parseInt': function( val ) {
	      return parseInt( val, 10 );
	    },
	    'parseFloat': function( val ) {
	      return parseFloat( val );
	    }
	  };

	  // ----- sort method ----- //

	  // sort filteredItem order
	  proto._sort = function() {
	    if ( !this.options.sortBy ) {
	      return;
	    }
	    // keep track of sortBy History
	    var sortBys = utils.makeArray( this.options.sortBy );
	    if ( !this._getIsSameSortBy( sortBys ) ) {
	      // concat all sortBy and sortHistory, add to front, oldest goes in last
	      this.sortHistory = sortBys.concat( this.sortHistory );
	    }
	    // sort magic
	    var itemSorter = getItemSorter( this.sortHistory, this.options.sortAscending );
	    this.filteredItems.sort( itemSorter );
	  };

	  // check if sortBys is same as start of sortHistory
	  proto._getIsSameSortBy = function( sortBys ) {
	    for ( var i=0; i < sortBys.length; i++ ) {
	      if ( sortBys[i] != this.sortHistory[i] ) {
	        return false;
	      }
	    }
	    return true;
	  };

	  // returns a function used for sorting
	  function getItemSorter( sortBys, sortAsc ) {
	    return function sorter( itemA, itemB ) {
	      // cycle through all sortKeys
	      for ( var i = 0; i < sortBys.length; i++ ) {
	        var sortBy = sortBys[i];
	        var a = itemA.sortData[ sortBy ];
	        var b = itemB.sortData[ sortBy ];
	        if ( a > b || a < b ) {
	          // if sortAsc is an object, use the value given the sortBy key
	          var isAscending = sortAsc[ sortBy ] !== undefined ? sortAsc[ sortBy ] : sortAsc;
	          var direction = isAscending ? 1 : -1;
	          return ( a > b ? 1 : -1 ) * direction;
	        }
	      }
	      return 0;
	    };
	  }

	  // -------------------------- methods -------------------------- //

	  // get layout mode
	  proto._mode = function() {
	    var layoutMode = this.options.layoutMode;
	    var mode = this.modes[ layoutMode ];
	    if ( !mode ) {
	      // TODO console.error
	      throw new Error( 'No layout mode: ' + layoutMode );
	    }
	    // HACK sync mode's options
	    // any options set after init for layout mode need to be synced
	    mode.options = this.options[ layoutMode ];
	    return mode;
	  };

	  proto._resetLayout = function() {
	    // trigger original reset layout
	    Outlayer.prototype._resetLayout.call( this );
	    this._mode()._resetLayout();
	  };

	  proto._getItemLayoutPosition = function( item  ) {
	    return this._mode()._getItemLayoutPosition( item );
	  };

	  proto._manageStamp = function( stamp ) {
	    this._mode()._manageStamp( stamp );
	  };

	  proto._getContainerSize = function() {
	    return this._mode()._getContainerSize();
	  };

	  proto.needsResizeLayout = function() {
	    return this._mode().needsResizeLayout();
	  };

	  // -------------------------- adding & removing -------------------------- //

	  // HEADS UP overwrites default Outlayer appended
	  proto.appended = function( elems ) {
	    var items = this.addItems( elems );
	    if ( !items.length ) {
	      return;
	    }
	    // filter, layout, reveal new items
	    var filteredItems = this._filterRevealAdded( items );
	    // add to filteredItems
	    this.filteredItems = this.filteredItems.concat( filteredItems );
	  };

	  // HEADS UP overwrites default Outlayer prepended
	  proto.prepended = function( elems ) {
	    var items = this._itemize( elems );
	    if ( !items.length ) {
	      return;
	    }
	    // start new layout
	    this._resetLayout();
	    this._manageStamps();
	    // filter, layout, reveal new items
	    var filteredItems = this._filterRevealAdded( items );
	    // layout previous items
	    this.layoutItems( this.filteredItems );
	    // add to items and filteredItems
	    this.filteredItems = filteredItems.concat( this.filteredItems );
	    this.items = items.concat( this.items );
	  };

	  proto._filterRevealAdded = function( items ) {
	    var filtered = this._filter( items );
	    this.hide( filtered.needHide );
	    // reveal all new items
	    this.reveal( filtered.matches );
	    // layout new items, no transition
	    this.layoutItems( filtered.matches, true );
	    return filtered.matches;
	  };

	  /**
	   * Filter, sort, and layout newly-appended item elements
	   * @param {Array or NodeList or Element} elems
	   */
	  proto.insert = function( elems ) {
	    var items = this.addItems( elems );
	    if ( !items.length ) {
	      return;
	    }
	    // append item elements
	    var i, item;
	    var len = items.length;
	    for ( i=0; i < len; i++ ) {
	      item = items[i];
	      this.element.appendChild( item.element );
	    }
	    // filter new stuff
	    var filteredInsertItems = this._filter( items ).matches;
	    // set flag
	    for ( i=0; i < len; i++ ) {
	      items[i].isLayoutInstant = true;
	    }
	    this.arrange();
	    // reset flag
	    for ( i=0; i < len; i++ ) {
	      delete items[i].isLayoutInstant;
	    }
	    this.reveal( filteredInsertItems );
	  };

	  var _remove = proto.remove;
	  proto.remove = function( elems ) {
	    elems = utils.makeArray( elems );
	    var removeItems = this.getItems( elems );
	    // do regular thing
	    _remove.call( this, elems );
	    // bail if no items to remove
	    var len = removeItems && removeItems.length;
	    // remove elems from filteredItems
	    for ( var i=0; len && i < len; i++ ) {
	      var item = removeItems[i];
	      // remove item from collection
	      utils.removeFrom( this.filteredItems, item );
	    }
	  };

	  proto.shuffle = function() {
	    // update random sortData
	    for ( var i=0; i < this.items.length; i++ ) {
	      var item = this.items[i];
	      item.sortData.random = Math.random();
	    }
	    this.options.sortBy = 'random';
	    this._sort();
	    this._layout();
	  };

	  /**
	   * trigger fn without transition
	   * kind of hacky to have this in the first place
	   * @param {Function} fn
	   * @param {Array} args
	   * @returns ret
	   * @private
	   */
	  proto._noTransition = function( fn, args ) {
	    // save transitionDuration before disabling
	    var transitionDuration = this.options.transitionDuration;
	    // disable transition
	    this.options.transitionDuration = 0;
	    // do it
	    var returnValue = fn.apply( this, args );
	    // re-enable transition for reveal
	    this.options.transitionDuration = transitionDuration;
	    return returnValue;
	  };

	  // ----- helper methods ----- //

	  /**
	   * getter method for getting filtered item elements
	   * @returns {Array} elems - collection of item elements
	   */
	  proto.getFilteredItemElements = function() {
	    return this.filteredItems.map( function( item ) {
	      return item.element;
	    });
	  };

	  // -----  ----- //

	  return Isotope;

	}));


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * getSize v2.0.2
	 * measure size of elements
	 * MIT license
	 */

	/*jshint browser: true, strict: true, undef: true, unused: true */
	/*global define: false, module: false, console: false */

	( function( window, factory ) {
	  'use strict';

	  if ( true ) {
	    // AMD
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
	      return factory();
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof module == 'object' && module.exports ) {
	    // CommonJS
	    module.exports = factory();
	  } else {
	    // browser global
	    window.getSize = factory();
	  }

	})( window, function factory() {
	'use strict';

	// -------------------------- helpers -------------------------- //

	// get a number from a string, not a percentage
	function getStyleSize( value ) {
	  var num = parseFloat( value );
	  // not a percent like '100%', and a number
	  var isValid = value.indexOf('%') == -1 && !isNaN( num );
	  return isValid && num;
	}

	function noop() {}

	var logError = typeof console == 'undefined' ? noop :
	  function( message ) {
	    console.error( message );
	  };

	// -------------------------- measurements -------------------------- //

	var measurements = [
	  'paddingLeft',
	  'paddingRight',
	  'paddingTop',
	  'paddingBottom',
	  'marginLeft',
	  'marginRight',
	  'marginTop',
	  'marginBottom',
	  'borderLeftWidth',
	  'borderRightWidth',
	  'borderTopWidth',
	  'borderBottomWidth'
	];

	var measurementsLength = measurements.length;

	function getZeroSize() {
	  var size = {
	    width: 0,
	    height: 0,
	    innerWidth: 0,
	    innerHeight: 0,
	    outerWidth: 0,
	    outerHeight: 0
	  };
	  for ( var i=0; i < measurementsLength; i++ ) {
	    var measurement = measurements[i];
	    size[ measurement ] = 0;
	  }
	  return size;
	}

	// -------------------------- getStyle -------------------------- //

	/**
	 * getStyle, get style of element, check for Firefox bug
	 * https://bugzilla.mozilla.org/show_bug.cgi?id=548397
	 */
	function getStyle( elem ) {
	  var style = getComputedStyle( elem );
	  if ( !style ) {
	    logError( 'Style returned ' + style +
	      '. Are you running this code in a hidden iframe on Firefox? ' +
	      'See http://bit.ly/getsizebug1' );
	  }
	  return style;
	}

	// -------------------------- setup -------------------------- //

	var isSetup = false;

	var isBoxSizeOuter;

	/**
	 * setup
	 * check isBoxSizerOuter
	 * do on first getSize() rather than on page load for Firefox bug
	 */
	function setup() {
	  // setup once
	  if ( isSetup ) {
	    return;
	  }
	  isSetup = true;

	  // -------------------------- box sizing -------------------------- //

	  /**
	   * WebKit measures the outer-width on style.width on border-box elems
	   * IE & Firefox<29 measures the inner-width
	   */
	  var div = document.createElement('div');
	  div.style.width = '200px';
	  div.style.padding = '1px 2px 3px 4px';
	  div.style.borderStyle = 'solid';
	  div.style.borderWidth = '1px 2px 3px 4px';
	  div.style.boxSizing = 'border-box';

	  var body = document.body || document.documentElement;
	  body.appendChild( div );
	  var style = getStyle( div );

	  getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize( style.width ) == 200;
	  body.removeChild( div );

	}

	// -------------------------- getSize -------------------------- //

	function getSize( elem ) {
	  setup();

	  // use querySeletor if elem is string
	  if ( typeof elem == 'string' ) {
	    elem = document.querySelector( elem );
	  }

	  // do not proceed on non-objects
	  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {
	    return;
	  }

	  var style = getStyle( elem );

	  // if hidden, everything is 0
	  if ( style.display == 'none' ) {
	    return getZeroSize();
	  }

	  var size = {};
	  size.width = elem.offsetWidth;
	  size.height = elem.offsetHeight;

	  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';

	  // get all measurements
	  for ( var i=0; i < measurementsLength; i++ ) {
	    var measurement = measurements[i];
	    var value = style[ measurement ];
	    var num = parseFloat( value );
	    // any 'auto', 'medium' value will be 0
	    size[ measurement ] = !isNaN( num ) ? num : 0;
	  }

	  var paddingWidth = size.paddingLeft + size.paddingRight;
	  var paddingHeight = size.paddingTop + size.paddingBottom;
	  var marginWidth = size.marginLeft + size.marginRight;
	  var marginHeight = size.marginTop + size.marginBottom;
	  var borderWidth = size.borderLeftWidth + size.borderRightWidth;
	  var borderHeight = size.borderTopWidth + size.borderBottomWidth;

	  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;

	  // overwrite width and height if we can get it from style
	  var styleWidth = getStyleSize( style.width );
	  if ( styleWidth !== false ) {
	    size.width = styleWidth +
	      // add padding and border unless it's already including it
	      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );
	  }

	  var styleHeight = getStyleSize( style.height );
	  if ( styleHeight !== false ) {
	    size.height = styleHeight +
	      // add padding and border unless it's already including it
	      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );
	  }

	  size.innerWidth = size.width - ( paddingWidth + borderWidth );
	  size.innerHeight = size.height - ( paddingHeight + borderHeight );

	  size.outerWidth = size.width + marginWidth;
	  size.outerHeight = size.height + marginHeight;

	  return size;
	}

	return getSize;

	});


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * matchesSelector v2.0.2
	 * matchesSelector( element, '.selector' )
	 * MIT license
	 */

	/*jshint browser: true, strict: true, undef: true, unused: true */

	( function( window, factory ) {
	  /*global define: false, module: false */
	  'use strict';
	  // universal module definition
	  if ( true ) {
	    // AMD
	    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof module == 'object' && module.exports ) {
	    // CommonJS
	    module.exports = factory();
	  } else {
	    // browser global
	    window.matchesSelector = factory();
	  }

	}( window, function factory() {
	  'use strict';

	  var matchesMethod = ( function() {
	    var ElemProto = window.Element.prototype;
	    // check for the standard method name first
	    if ( ElemProto.matches ) {
	      return 'matches';
	    }
	    // check un-prefixed
	    if ( ElemProto.matchesSelector ) {
	      return 'matchesSelector';
	    }
	    // check vendor prefixes
	    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];

	    for ( var i=0; i < prefixes.length; i++ ) {
	      var prefix = prefixes[i];
	      var method = prefix + 'MatchesSelector';
	      if ( ElemProto[ method ] ) {
	        return method;
	      }
	    }
	  })();

	  return function matchesSelector( elem, selector ) {
	    return elem[ matchesMethod ]( selector );
	  };

	}));


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * Fizzy UI utils v2.0.5
	 * MIT license
	 */

	/*jshint browser: true, undef: true, unused: true, strict: true */

	( function( window, factory ) {
	  // universal module definition
	  /*jshint strict: false */ /*globals define, module, require */

	  if ( true ) {
	    // AMD
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
	      __webpack_require__(4)
	    ], __WEBPACK_AMD_DEFINE_RESULT__ = function( matchesSelector ) {
	      return factory( window, matchesSelector );
	    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof module == 'object' && module.exports ) {
	    // CommonJS
	    module.exports = factory(
	      window,
	      require('desandro-matches-selector')
	    );
	  } else {
	    // browser global
	    window.fizzyUIUtils = factory(
	      window,
	      window.matchesSelector
	    );
	  }

	}( window, function factory( window, matchesSelector ) {

	'use strict';

	var utils = {};

	// ----- extend ----- //

	// extends objects
	utils.extend = function( a, b ) {
	  for ( var prop in b ) {
	    a[ prop ] = b[ prop ];
	  }
	  return a;
	};

	// ----- modulo ----- //

	utils.modulo = function( num, div ) {
	  return ( ( num % div ) + div ) % div;
	};

	// ----- makeArray ----- //

	// turn element or nodeList into an array
	utils.makeArray = function( obj ) {
	  var ary = [];
	  if ( Array.isArray( obj ) ) {
	    // use object if already an array
	    ary = obj;
	  } else if ( obj && typeof obj == 'object' &&
	    typeof obj.length == 'number' ) {
	    // convert nodeList to array
	    for ( var i=0; i < obj.length; i++ ) {
	      ary.push( obj[i] );
	    }
	  } else {
	    // array of single index
	    ary.push( obj );
	  }
	  return ary;
	};

	// ----- removeFrom ----- //

	utils.removeFrom = function( ary, obj ) {
	  var index = ary.indexOf( obj );
	  if ( index != -1 ) {
	    ary.splice( index, 1 );
	  }
	};

	// ----- getParent ----- //

	utils.getParent = function( elem, selector ) {
	  while ( elem.parentNode && elem != document.body ) {
	    elem = elem.parentNode;
	    if ( matchesSelector( elem, selector ) ) {
	      return elem;
	    }
	  }
	};

	// ----- getQueryElement ----- //

	// use element as selector string
	utils.getQueryElement = function( elem ) {
	  if ( typeof elem == 'string' ) {
	    return document.querySelector( elem );
	  }
	  return elem;
	};

	// ----- handleEvent ----- //

	// enable .ontype to trigger from .addEventListener( elem, 'type' )
	utils.handleEvent = function( event ) {
	  var method = 'on' + event.type;
	  if ( this[ method ] ) {
	    this[ method ]( event );
	  }
	};

	// ----- filterFindElements ----- //

	utils.filterFindElements = function( elems, selector ) {
	  // make array of elems
	  elems = utils.makeArray( elems );
	  var ffElems = [];

	  elems.forEach( function( elem ) {
	    // check that elem is an actual element
	    if ( !( elem instanceof HTMLElement ) ) {
	      return;
	    }
	    // add elem if no selector
	    if ( !selector ) {
	      ffElems.push( elem );
	      return;
	    }
	    // filter & find items if we have a selector
	    // filter
	    if ( matchesSelector( elem, selector ) ) {
	      ffElems.push( elem );
	    }
	    // find children
	    var childElems = elem.querySelectorAll( selector );
	    // concat childElems to filterFound array
	    for ( var i=0; i < childElems.length; i++ ) {
	      ffElems.push( childElems[i] );
	    }
	  });

	  return ffElems;
	};

	// ----- debounceMethod ----- //

	utils.debounceMethod = function( _class, methodName, threshold ) {
	  // original method
	  var method = _class.prototype[ methodName ];
	  var timeoutName = methodName + 'Timeout';

	  _class.prototype[ methodName ] = function() {
	    var timeout = this[ timeoutName ];
	    if ( timeout ) {
	      clearTimeout( timeout );
	    }
	    var args = arguments;

	    var _this = this;
	    this[ timeoutName ] = setTimeout( function() {
	      method.apply( _this, args );
	      delete _this[ timeoutName ];
	    }, threshold || 100 );
	  };
	};

	// ----- docReady ----- //

	utils.docReady = function( callback ) {
	  var readyState = document.readyState;
	  if ( readyState == 'complete' || readyState == 'interactive' ) {
	    // do async to allow for other scripts to run. metafizzy/flickity#441
	    setTimeout( callback );
	  } else {
	    document.addEventListener( 'DOMContentLoaded', callback );
	  }
	};

	// ----- htmlInit ----- //

	// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/
	utils.toDashed = function( str ) {
	  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {
	    return $1 + '-' + $2;
	  }).toLowerCase();
	};

	var console = window.console;
	/**
	 * allow user to initialize classes via [data-namespace] or .js-namespace class
	 * htmlInit( Widget, 'widgetName' )
	 * options are parsed from data-namespace-options
	 */
	utils.htmlInit = function( WidgetClass, namespace ) {
	  utils.docReady( function() {
	    var dashedNamespace = utils.toDashed( namespace );
	    var dataAttr = 'data-' + dashedNamespace;
	    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );
	    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );
	    var elems = utils.makeArray( dataAttrElems )
	      .concat( utils.makeArray( jsDashElems ) );
	    var dataOptionsAttr = dataAttr + '-options';
	    var jQuery = window.jQuery;

	    elems.forEach( function( elem ) {
	      var attr = elem.getAttribute( dataAttr ) ||
	        elem.getAttribute( dataOptionsAttr );
	      var options;
	      try {
	        options = attr && JSON.parse( attr );
	      } catch ( error ) {
	        // log error, do not initialize
	        if ( console ) {
	          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +
	          ': ' + error );
	        }
	        return;
	      }
	      // initialize
	      var instance = new WidgetClass( elem, options );
	      // make available via $().data('namespace')
	      if ( jQuery ) {
	        jQuery.data( elem, namespace, instance );
	      }
	    });

	  });
	};

	// -----  ----- //

	return utils;

	}));


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * Outlayer v2.1.0
	 * the brains and guts of a layout library
	 * MIT license
	 */

	( function( window, factory ) {
	  'use strict';
	  // universal module definition
	  /* jshint strict: false */ /* globals define, module, require */
	  if ( true ) {
	    // AMD - RequireJS
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
	        __webpack_require__(7),
	        __webpack_require__(3),
	        __webpack_require__(5),
	        __webpack_require__(8)
	      ], __WEBPACK_AMD_DEFINE_RESULT__ = function( EvEmitter, getSize, utils, Item ) {
	        return factory( window, EvEmitter, getSize, utils, Item);
	      }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof module == 'object' && module.exports ) {
	    // CommonJS - Browserify, Webpack
	    module.exports = factory(
	      window,
	      require('ev-emitter'),
	      require('get-size'),
	      require('fizzy-ui-utils'),
	      require('./item')
	    );
	  } else {
	    // browser global
	    window.Outlayer = factory(
	      window,
	      window.EvEmitter,
	      window.getSize,
	      window.fizzyUIUtils,
	      window.Outlayer.Item
	    );
	  }

	}( window, function factory( window, EvEmitter, getSize, utils, Item ) {
	'use strict';

	// ----- vars ----- //

	var console = window.console;
	var jQuery = window.jQuery;
	var noop = function() {};

	// -------------------------- Outlayer -------------------------- //

	// globally unique identifiers
	var GUID = 0;
	// internal store of all Outlayer intances
	var instances = {};


	/**
	 * @param {Element, String} element
	 * @param {Object} options
	 * @constructor
	 */
	function Outlayer( element, options ) {
	  var queryElement = utils.getQueryElement( element );
	  if ( !queryElement ) {
	    if ( console ) {
	      console.error( 'Bad element for ' + this.constructor.namespace +
	        ': ' + ( queryElement || element ) );
	    }
	    return;
	  }
	  this.element = queryElement;
	  // add jQuery
	  if ( jQuery ) {
	    this.$element = jQuery( this.element );
	  }

	  // options
	  this.options = utils.extend( {}, this.constructor.defaults );
	  this.option( options );

	  // add id for Outlayer.getFromElement
	  var id = ++GUID;
	  this.element.outlayerGUID = id; // expando
	  instances[ id ] = this; // associate via id

	  // kick it off
	  this._create();

	  var isInitLayout = this._getOption('initLayout');
	  if ( isInitLayout ) {
	    this.layout();
	  }
	}

	// settings are for internal use only
	Outlayer.namespace = 'outlayer';
	Outlayer.Item = Item;

	// default options
	Outlayer.defaults = {
	  containerStyle: {
	    position: 'relative'
	  },
	  initLayout: true,
	  originLeft: true,
	  originTop: true,
	  resize: true,
	  resizeContainer: true,
	  // item options
	  transitionDuration: '0.4s',
	  hiddenStyle: {
	    opacity: 0,
	    transform: 'scale(0.001)'
	  },
	  visibleStyle: {
	    opacity: 1,
	    transform: 'scale(1)'
	  }
	};

	var proto = Outlayer.prototype;
	// inherit EvEmitter
	utils.extend( proto, EvEmitter.prototype );

	/**
	 * set options
	 * @param {Object} opts
	 */
	proto.option = function( opts ) {
	  utils.extend( this.options, opts );
	};

	/**
	 * get backwards compatible option value, check old name
	 */
	proto._getOption = function( option ) {
	  var oldOption = this.constructor.compatOptions[ option ];
	  return oldOption && this.options[ oldOption ] !== undefined ?
	    this.options[ oldOption ] : this.options[ option ];
	};

	Outlayer.compatOptions = {
	  // currentName: oldName
	  initLayout: 'isInitLayout',
	  horizontal: 'isHorizontal',
	  layoutInstant: 'isLayoutInstant',
	  originLeft: 'isOriginLeft',
	  originTop: 'isOriginTop',
	  resize: 'isResizeBound',
	  resizeContainer: 'isResizingContainer'
	};

	proto._create = function() {
	  // get items from children
	  this.reloadItems();
	  // elements that affect layout, but are not laid out
	  this.stamps = [];
	  this.stamp( this.options.stamp );
	  // set container style
	  utils.extend( this.element.style, this.options.containerStyle );

	  // bind resize method
	  var canBindResize = this._getOption('resize');
	  if ( canBindResize ) {
	    this.bindResize();
	  }
	};

	// goes through all children again and gets bricks in proper order
	proto.reloadItems = function() {
	  // collection of item elements
	  this.items = this._itemize( this.element.children );
	};


	/**
	 * turn elements into Outlayer.Items to be used in layout
	 * @param {Array or NodeList or HTMLElement} elems
	 * @returns {Array} items - collection of new Outlayer Items
	 */
	proto._itemize = function( elems ) {

	  var itemElems = this._filterFindItemElements( elems );
	  var Item = this.constructor.Item;

	  // create new Outlayer Items for collection
	  var items = [];
	  for ( var i=0; i < itemElems.length; i++ ) {
	    var elem = itemElems[i];
	    var item = new Item( elem, this );
	    items.push( item );
	  }

	  return items;
	};

	/**
	 * get item elements to be used in layout
	 * @param {Array or NodeList or HTMLElement} elems
	 * @returns {Array} items - item elements
	 */
	proto._filterFindItemElements = function( elems ) {
	  return utils.filterFindElements( elems, this.options.itemSelector );
	};

	/**
	 * getter method for getting item elements
	 * @returns {Array} elems - collection of item elements
	 */
	proto.getItemElements = function() {
	  return this.items.map( function( item ) {
	    return item.element;
	  });
	};

	// ----- init & layout ----- //

	/**
	 * lays out all items
	 */
	proto.layout = function() {
	  this._resetLayout();
	  this._manageStamps();

	  // don't animate first layout
	  var layoutInstant = this._getOption('layoutInstant');
	  var isInstant = layoutInstant !== undefined ?
	    layoutInstant : !this._isLayoutInited;
	  this.layoutItems( this.items, isInstant );

	  // flag for initalized
	  this._isLayoutInited = true;
	};

	// _init is alias for layout
	proto._init = proto.layout;

	/**
	 * logic before any new layout
	 */
	proto._resetLayout = function() {
	  this.getSize();
	};


	proto.getSize = function() {
	  this.size = getSize( this.element );
	};

	/**
	 * get measurement from option, for columnWidth, rowHeight, gutter
	 * if option is String -> get element from selector string, & get size of element
	 * if option is Element -> get size of element
	 * else use option as a number
	 *
	 * @param {String} measurement
	 * @param {String} size - width or height
	 * @private
	 */
	proto._getMeasurement = function( measurement, size ) {
	  var option = this.options[ measurement ];
	  var elem;
	  if ( !option ) {
	    // default to 0
	    this[ measurement ] = 0;
	  } else {
	    // use option as an element
	    if ( typeof option == 'string' ) {
	      elem = this.element.querySelector( option );
	    } else if ( option instanceof HTMLElement ) {
	      elem = option;
	    }
	    // use size of element, if element
	    this[ measurement ] = elem ? getSize( elem )[ size ] : option;
	  }
	};

	/**
	 * layout a collection of item elements
	 * @api public
	 */
	proto.layoutItems = function( items, isInstant ) {
	  items = this._getItemsForLayout( items );

	  this._layoutItems( items, isInstant );

	  this._postLayout();
	};

	/**
	 * get the items to be laid out
	 * you may want to skip over some items
	 * @param {Array} items
	 * @returns {Array} items
	 */
	proto._getItemsForLayout = function( items ) {
	  return items.filter( function( item ) {
	    return !item.isIgnored;
	  });
	};

	/**
	 * layout items
	 * @param {Array} items
	 * @param {Boolean} isInstant
	 */
	proto._layoutItems = function( items, isInstant ) {
	  this._emitCompleteOnItems( 'layout', items );

	  if ( !items || !items.length ) {
	    // no items, emit event with empty array
	    return;
	  }

	  var queue = [];

	  items.forEach( function( item ) {
	    // get x/y object from method
	    var position = this._getItemLayoutPosition( item );
	    // enqueue
	    position.item = item;
	    position.isInstant = isInstant || item.isLayoutInstant;
	    queue.push( position );
	  }, this );

	  this._processLayoutQueue( queue );
	};

	/**
	 * get item layout position
	 * @param {Outlayer.Item} item
	 * @returns {Object} x and y position
	 */
	proto._getItemLayoutPosition = function( /* item */ ) {
	  return {
	    x: 0,
	    y: 0
	  };
	};

	/**
	 * iterate over array and position each item
	 * Reason being - separating this logic prevents 'layout invalidation'
	 * thx @paul_irish
	 * @param {Array} queue
	 */
	proto._processLayoutQueue = function( queue ) {
	  this.updateStagger();
	  queue.forEach( function( obj, i ) {
	    this._positionItem( obj.item, obj.x, obj.y, obj.isInstant, i );
	  }, this );
	};

	// set stagger from option in milliseconds number
	proto.updateStagger = function() {
	  var stagger = this.options.stagger;
	  if ( stagger === null || stagger === undefined ) {
	    this.stagger = 0;
	    return;
	  }
	  this.stagger = getMilliseconds( stagger );
	  return this.stagger;
	};

	/**
	 * Sets position of item in DOM
	 * @param {Outlayer.Item} item
	 * @param {Number} x - horizontal position
	 * @param {Number} y - vertical position
	 * @param {Boolean} isInstant - disables transitions
	 */
	proto._positionItem = function( item, x, y, isInstant, i ) {
	  if ( isInstant ) {
	    // if not transition, just set CSS
	    item.goTo( x, y );
	  } else {
	    item.stagger( i * this.stagger );
	    item.moveTo( x, y );
	  }
	};

	/**
	 * Any logic you want to do after each layout,
	 * i.e. size the container
	 */
	proto._postLayout = function() {
	  this.resizeContainer();
	};

	proto.resizeContainer = function() {
	  var isResizingContainer = this._getOption('resizeContainer');
	  if ( !isResizingContainer ) {
	    return;
	  }
	  var size = this._getContainerSize();
	  if ( size ) {
	    this._setContainerMeasure( size.width, true );
	    this._setContainerMeasure( size.height, false );
	  }
	};

	/**
	 * Sets width or height of container if returned
	 * @returns {Object} size
	 *   @param {Number} width
	 *   @param {Number} height
	 */
	proto._getContainerSize = noop;

	/**
	 * @param {Number} measure - size of width or height
	 * @param {Boolean} isWidth
	 */
	proto._setContainerMeasure = function( measure, isWidth ) {
	  if ( measure === undefined ) {
	    return;
	  }

	  var elemSize = this.size;
	  // add padding and border width if border box
	  if ( elemSize.isBorderBox ) {
	    measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight +
	      elemSize.borderLeftWidth + elemSize.borderRightWidth :
	      elemSize.paddingBottom + elemSize.paddingTop +
	      elemSize.borderTopWidth + elemSize.borderBottomWidth;
	  }

	  measure = Math.max( measure, 0 );
	  this.element.style[ isWidth ? 'width' : 'height' ] = measure + 'px';
	};

	/**
	 * emit eventComplete on a collection of items events
	 * @param {String} eventName
	 * @param {Array} items - Outlayer.Items
	 */
	proto._emitCompleteOnItems = function( eventName, items ) {
	  var _this = this;
	  function onComplete() {
	    _this.dispatchEvent( eventName + 'Complete', null, [ items ] );
	  }

	  var count = items.length;
	  if ( !items || !count ) {
	    onComplete();
	    return;
	  }

	  var doneCount = 0;
	  function tick() {
	    doneCount++;
	    if ( doneCount == count ) {
	      onComplete();
	    }
	  }

	  // bind callback
	  items.forEach( function( item ) {
	    item.once( eventName, tick );
	  });
	};

	/**
	 * emits events via EvEmitter and jQuery events
	 * @param {String} type - name of event
	 * @param {Event} event - original event
	 * @param {Array} args - extra arguments
	 */
	proto.dispatchEvent = function( type, event, args ) {
	  // add original event to arguments
	  var emitArgs = event ? [ event ].concat( args ) : args;
	  this.emitEvent( type, emitArgs );

	  if ( jQuery ) {
	    // set this.$element
	    this.$element = this.$element || jQuery( this.element );
	    if ( event ) {
	      // create jQuery event
	      var $event = jQuery.Event( event );
	      $event.type = type;
	      this.$element.trigger( $event, args );
	    } else {
	      // just trigger with type if no event available
	      this.$element.trigger( type, args );
	    }
	  }
	};

	// -------------------------- ignore & stamps -------------------------- //


	/**
	 * keep item in collection, but do not lay it out
	 * ignored items do not get skipped in layout
	 * @param {Element} elem
	 */
	proto.ignore = function( elem ) {
	  var item = this.getItem( elem );
	  if ( item ) {
	    item.isIgnored = true;
	  }
	};

	/**
	 * return item to layout collection
	 * @param {Element} elem
	 */
	proto.unignore = function( elem ) {
	  var item = this.getItem( elem );
	  if ( item ) {
	    delete item.isIgnored;
	  }
	};

	/**
	 * adds elements to stamps
	 * @param {NodeList, Array, Element, or String} elems
	 */
	proto.stamp = function( elems ) {
	  elems = this._find( elems );
	  if ( !elems ) {
	    return;
	  }

	  this.stamps = this.stamps.concat( elems );
	  // ignore
	  elems.forEach( this.ignore, this );
	};

	/**
	 * removes elements to stamps
	 * @param {NodeList, Array, or Element} elems
	 */
	proto.unstamp = function( elems ) {
	  elems = this._find( elems );
	  if ( !elems ){
	    return;
	  }

	  elems.forEach( function( elem ) {
	    // filter out removed stamp elements
	    utils.removeFrom( this.stamps, elem );
	    this.unignore( elem );
	  }, this );
	};

	/**
	 * finds child elements
	 * @param {NodeList, Array, Element, or String} elems
	 * @returns {Array} elems
	 */
	proto._find = function( elems ) {
	  if ( !elems ) {
	    return;
	  }
	  // if string, use argument as selector string
	  if ( typeof elems == 'string' ) {
	    elems = this.element.querySelectorAll( elems );
	  }
	  elems = utils.makeArray( elems );
	  return elems;
	};

	proto._manageStamps = function() {
	  if ( !this.stamps || !this.stamps.length ) {
	    return;
	  }

	  this._getBoundingRect();

	  this.stamps.forEach( this._manageStamp, this );
	};

	// update boundingLeft / Top
	proto._getBoundingRect = function() {
	  // get bounding rect for container element
	  var boundingRect = this.element.getBoundingClientRect();
	  var size = this.size;
	  this._boundingRect = {
	    left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,
	    top: boundingRect.top + size.paddingTop + size.borderTopWidth,
	    right: boundingRect.right - ( size.paddingRight + size.borderRightWidth ),
	    bottom: boundingRect.bottom - ( size.paddingBottom + size.borderBottomWidth )
	  };
	};

	/**
	 * @param {Element} stamp
	**/
	proto._manageStamp = noop;

	/**
	 * get x/y position of element relative to container element
	 * @param {Element} elem
	 * @returns {Object} offset - has left, top, right, bottom
	 */
	proto._getElementOffset = function( elem ) {
	  var boundingRect = elem.getBoundingClientRect();
	  var thisRect = this._boundingRect;
	  var size = getSize( elem );
	  var offset = {
	    left: boundingRect.left - thisRect.left - size.marginLeft,
	    top: boundingRect.top - thisRect.top - size.marginTop,
	    right: thisRect.right - boundingRect.right - size.marginRight,
	    bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom
	  };
	  return offset;
	};

	// -------------------------- resize -------------------------- //

	// enable event handlers for listeners
	// i.e. resize -> onresize
	proto.handleEvent = utils.handleEvent;

	/**
	 * Bind layout to window resizing
	 */
	proto.bindResize = function() {
	  window.addEventListener( 'resize', this );
	  this.isResizeBound = true;
	};

	/**
	 * Unbind layout to window resizing
	 */
	proto.unbindResize = function() {
	  window.removeEventListener( 'resize', this );
	  this.isResizeBound = false;
	};

	proto.onresize = function() {
	  this.resize();
	};

	utils.debounceMethod( Outlayer, 'onresize', 100 );

	proto.resize = function() {
	  // don't trigger if size did not change
	  // or if resize was unbound. See #9
	  if ( !this.isResizeBound || !this.needsResizeLayout() ) {
	    return;
	  }

	  this.layout();
	};

	/**
	 * check if layout is needed post layout
	 * @returns Boolean
	 */
	proto.needsResizeLayout = function() {
	  var size = getSize( this.element );
	  // check that this.size and size are there
	  // IE8 triggers resize on body size change, so they might not be
	  var hasSizes = this.size && size;
	  return hasSizes && size.innerWidth !== this.size.innerWidth;
	};

	// -------------------------- methods -------------------------- //

	/**
	 * add items to Outlayer instance
	 * @param {Array or NodeList or Element} elems
	 * @returns {Array} items - Outlayer.Items
	**/
	proto.addItems = function( elems ) {
	  var items = this._itemize( elems );
	  // add items to collection
	  if ( items.length ) {
	    this.items = this.items.concat( items );
	  }
	  return items;
	};

	/**
	 * Layout newly-appended item elements
	 * @param {Array or NodeList or Element} elems
	 */
	proto.appended = function( elems ) {
	  var items = this.addItems( elems );
	  if ( !items.length ) {
	    return;
	  }
	  // layout and reveal just the new items
	  this.layoutItems( items, true );
	  this.reveal( items );
	};

	/**
	 * Layout prepended elements
	 * @param {Array or NodeList or Element} elems
	 */
	proto.prepended = function( elems ) {
	  var items = this._itemize( elems );
	  if ( !items.length ) {
	    return;
	  }
	  // add items to beginning of collection
	  var previousItems = this.items.slice(0);
	  this.items = items.concat( previousItems );
	  // start new layout
	  this._resetLayout();
	  this._manageStamps();
	  // layout new stuff without transition
	  this.layoutItems( items, true );
	  this.reveal( items );
	  // layout previous items
	  this.layoutItems( previousItems );
	};

	/**
	 * reveal a collection of items
	 * @param {Array of Outlayer.Items} items
	 */
	proto.reveal = function( items ) {
	  this._emitCompleteOnItems( 'reveal', items );
	  if ( !items || !items.length ) {
	    return;
	  }
	  var stagger = this.updateStagger();
	  items.forEach( function( item, i ) {
	    item.stagger( i * stagger );
	    item.reveal();
	  });
	};

	/**
	 * hide a collection of items
	 * @param {Array of Outlayer.Items} items
	 */
	proto.hide = function( items ) {
	  this._emitCompleteOnItems( 'hide', items );
	  if ( !items || !items.length ) {
	    return;
	  }
	  var stagger = this.updateStagger();
	  items.forEach( function( item, i ) {
	    item.stagger( i * stagger );
	    item.hide();
	  });
	};

	/**
	 * reveal item elements
	 * @param {Array}, {Element}, {NodeList} items
	 */
	proto.revealItemElements = function( elems ) {
	  var items = this.getItems( elems );
	  this.reveal( items );
	};

	/**
	 * hide item elements
	 * @param {Array}, {Element}, {NodeList} items
	 */
	proto.hideItemElements = function( elems ) {
	  var items = this.getItems( elems );
	  this.hide( items );
	};

	/**
	 * get Outlayer.Item, given an Element
	 * @param {Element} elem
	 * @param {Function} callback
	 * @returns {Outlayer.Item} item
	 */
	proto.getItem = function( elem ) {
	  // loop through items to get the one that matches
	  for ( var i=0; i < this.items.length; i++ ) {
	    var item = this.items[i];
	    if ( item.element == elem ) {
	      // return item
	      return item;
	    }
	  }
	};

	/**
	 * get collection of Outlayer.Items, given Elements
	 * @param {Array} elems
	 * @returns {Array} items - Outlayer.Items
	 */
	proto.getItems = function( elems ) {
	  elems = utils.makeArray( elems );
	  var items = [];
	  elems.forEach( function( elem ) {
	    var item = this.getItem( elem );
	    if ( item ) {
	      items.push( item );
	    }
	  }, this );

	  return items;
	};

	/**
	 * remove element(s) from instance and DOM
	 * @param {Array or NodeList or Element} elems
	 */
	proto.remove = function( elems ) {
	  var removeItems = this.getItems( elems );

	  this._emitCompleteOnItems( 'remove', removeItems );

	  // bail if no items to remove
	  if ( !removeItems || !removeItems.length ) {
	    return;
	  }

	  removeItems.forEach( function( item ) {
	    item.remove();
	    // remove item from collection
	    utils.removeFrom( this.items, item );
	  }, this );
	};

	// ----- destroy ----- //

	// remove and disable Outlayer instance
	proto.destroy = function() {
	  // clean up dynamic styles
	  var style = this.element.style;
	  style.height = '';
	  style.position = '';
	  style.width = '';
	  // destroy items
	  this.items.forEach( function( item ) {
	    item.destroy();
	  });

	  this.unbindResize();

	  var id = this.element.outlayerGUID;
	  delete instances[ id ]; // remove reference to instance by id
	  delete this.element.outlayerGUID;
	  // remove data for jQuery
	  if ( jQuery ) {
	    jQuery.removeData( this.element, this.constructor.namespace );
	  }

	};

	// -------------------------- data -------------------------- //

	/**
	 * get Outlayer instance from element
	 * @param {Element} elem
	 * @returns {Outlayer}
	 */
	Outlayer.data = function( elem ) {
	  elem = utils.getQueryElement( elem );
	  var id = elem && elem.outlayerGUID;
	  return id && instances[ id ];
	};


	// -------------------------- create Outlayer class -------------------------- //

	/**
	 * create a layout class
	 * @param {String} namespace
	 */
	Outlayer.create = function( namespace, options ) {
	  // sub-class Outlayer
	  var Layout = subclass( Outlayer );
	  // apply new options and compatOptions
	  Layout.defaults = utils.extend( {}, Outlayer.defaults );
	  utils.extend( Layout.defaults, options );
	  Layout.compatOptions = utils.extend( {}, Outlayer.compatOptions  );

	  Layout.namespace = namespace;

	  Layout.data = Outlayer.data;

	  // sub-class Item
	  Layout.Item = subclass( Item );

	  // -------------------------- declarative -------------------------- //

	  utils.htmlInit( Layout, namespace );

	  // -------------------------- jQuery bridge -------------------------- //

	  // make into jQuery plugin
	  if ( jQuery && jQuery.bridget ) {
	    jQuery.bridget( namespace, Layout );
	  }

	  return Layout;
	};

	function subclass( Parent ) {
	  function SubClass() {
	    Parent.apply( this, arguments );
	  }

	  SubClass.prototype = Object.create( Parent.prototype );
	  SubClass.prototype.constructor = SubClass;

	  return SubClass;
	}

	// ----- helpers ----- //

	// how many milliseconds are in each unit
	var msUnits = {
	  ms: 1,
	  s: 1000
	};

	// munge time-like parameter into millisecond number
	// '0.4s' -> 40
	function getMilliseconds( time ) {
	  if ( typeof time == 'number' ) {
	    return time;
	  }
	  var matches = time.match( /(^\d*\.?\d*)(\w*)/ );
	  var num = matches && matches[1];
	  var unit = matches && matches[2];
	  if ( !num.length ) {
	    return 0;
	  }
	  num = parseFloat( num );
	  var mult = msUnits[ unit ] || 1;
	  return num * mult;
	}

	// ----- fin ----- //

	// back in global
	Outlayer.Item = Item;

	return Outlayer;

	}));


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * EvEmitter v1.0.3
	 * Lil' event emitter
	 * MIT License
	 */

	/* jshint unused: true, undef: true, strict: true */

	( function( global, factory ) {
	  // universal module definition
	  /* jshint strict: false */ /* globals define, module, window */
	  if ( true ) {
	    // AMD - RequireJS
	    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof module == 'object' && module.exports ) {
	    // CommonJS - Browserify, Webpack
	    module.exports = factory();
	  } else {
	    // Browser globals
	    global.EvEmitter = factory();
	  }

	}( typeof window != 'undefined' ? window : this, function() {

	"use strict";

	function EvEmitter() {}

	var proto = EvEmitter.prototype;

	proto.on = function( eventName, listener ) {
	  if ( !eventName || !listener ) {
	    return;
	  }
	  // set events hash
	  var events = this._events = this._events || {};
	  // set listeners array
	  var listeners = events[ eventName ] = events[ eventName ] || [];
	  // only add once
	  if ( listeners.indexOf( listener ) == -1 ) {
	    listeners.push( listener );
	  }

	  return this;
	};

	proto.once = function( eventName, listener ) {
	  if ( !eventName || !listener ) {
	    return;
	  }
	  // add event
	  this.on( eventName, listener );
	  // set once flag
	  // set onceEvents hash
	  var onceEvents = this._onceEvents = this._onceEvents || {};
	  // set onceListeners object
	  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};
	  // set flag
	  onceListeners[ listener ] = true;

	  return this;
	};

	proto.off = function( eventName, listener ) {
	  var listeners = this._events && this._events[ eventName ];
	  if ( !listeners || !listeners.length ) {
	    return;
	  }
	  var index = listeners.indexOf( listener );
	  if ( index != -1 ) {
	    listeners.splice( index, 1 );
	  }

	  return this;
	};

	proto.emitEvent = function( eventName, args ) {
	  var listeners = this._events && this._events[ eventName ];
	  if ( !listeners || !listeners.length ) {
	    return;
	  }
	  var i = 0;
	  var listener = listeners[i];
	  args = args || [];
	  // once stuff
	  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];

	  while ( listener ) {
	    var isOnce = onceListeners && onceListeners[ listener ];
	    if ( isOnce ) {
	      // remove listener
	      // remove before trigger to prevent recursion
	      this.off( eventName, listener );
	      // unset once flag
	      delete onceListeners[ listener ];
	    }
	    // trigger listener
	    listener.apply( this, args );
	    // get next listener
	    i += isOnce ? 0 : 1;
	    listener = listeners[i];
	  }

	  return this;
	};

	return EvEmitter;

	}));


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * Outlayer Item
	 */

	( function( window, factory ) {
	  // universal module definition
	  /* jshint strict: false */ /* globals define, module, require */
	  if ( true ) {
	    // AMD - RequireJS
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
	        __webpack_require__(7),
	        __webpack_require__(3)
	      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof module == 'object' && module.exports ) {
	    // CommonJS - Browserify, Webpack
	    module.exports = factory(
	      require('ev-emitter'),
	      require('get-size')
	    );
	  } else {
	    // browser global
	    window.Outlayer = {};
	    window.Outlayer.Item = factory(
	      window.EvEmitter,
	      window.getSize
	    );
	  }

	}( window, function factory( EvEmitter, getSize ) {
	'use strict';

	// ----- helpers ----- //

	function isEmptyObj( obj ) {
	  for ( var prop in obj ) {
	    return false;
	  }
	  prop = null;
	  return true;
	}

	// -------------------------- CSS3 support -------------------------- //


	var docElemStyle = document.documentElement.style;

	var transitionProperty = typeof docElemStyle.transition == 'string' ?
	  'transition' : 'WebkitTransition';
	var transformProperty = typeof docElemStyle.transform == 'string' ?
	  'transform' : 'WebkitTransform';

	var transitionEndEvent = {
	  WebkitTransition: 'webkitTransitionEnd',
	  transition: 'transitionend'
	}[ transitionProperty ];

	// cache all vendor properties that could have vendor prefix
	var vendorProperties = {
	  transform: transformProperty,
	  transition: transitionProperty,
	  transitionDuration: transitionProperty + 'Duration',
	  transitionProperty: transitionProperty + 'Property',
	  transitionDelay: transitionProperty + 'Delay'
	};

	// -------------------------- Item -------------------------- //

	function Item( element, layout ) {
	  if ( !element ) {
	    return;
	  }

	  this.element = element;
	  // parent layout class, i.e. Masonry, Isotope, or Packery
	  this.layout = layout;
	  this.position = {
	    x: 0,
	    y: 0
	  };

	  this._create();
	}

	// inherit EvEmitter
	var proto = Item.prototype = Object.create( EvEmitter.prototype );
	proto.constructor = Item;

	proto._create = function() {
	  // transition objects
	  this._transn = {
	    ingProperties: {},
	    clean: {},
	    onEnd: {}
	  };

	  this.css({
	    position: 'absolute'
	  });
	};

	// trigger specified handler for event type
	proto.handleEvent = function( event ) {
	  var method = 'on' + event.type;
	  if ( this[ method ] ) {
	    this[ method ]( event );
	  }
	};

	proto.getSize = function() {
	  this.size = getSize( this.element );
	};

	/**
	 * apply CSS styles to element
	 * @param {Object} style
	 */
	proto.css = function( style ) {
	  var elemStyle = this.element.style;

	  for ( var prop in style ) {
	    // use vendor property if available
	    var supportedProp = vendorProperties[ prop ] || prop;
	    elemStyle[ supportedProp ] = style[ prop ];
	  }
	};

	 // measure position, and sets it
	proto.getPosition = function() {
	  var style = getComputedStyle( this.element );
	  var isOriginLeft = this.layout._getOption('originLeft');
	  var isOriginTop = this.layout._getOption('originTop');
	  var xValue = style[ isOriginLeft ? 'left' : 'right' ];
	  var yValue = style[ isOriginTop ? 'top' : 'bottom' ];
	  // convert percent to pixels
	  var layoutSize = this.layout.size;
	  var x = xValue.indexOf('%') != -1 ?
	    ( parseFloat( xValue ) / 100 ) * layoutSize.width : parseInt( xValue, 10 );
	  var y = yValue.indexOf('%') != -1 ?
	    ( parseFloat( yValue ) / 100 ) * layoutSize.height : parseInt( yValue, 10 );

	  // clean up 'auto' or other non-integer values
	  x = isNaN( x ) ? 0 : x;
	  y = isNaN( y ) ? 0 : y;
	  // remove padding from measurement
	  x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;
	  y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;

	  this.position.x = x;
	  this.position.y = y;
	};

	// set settled position, apply padding
	proto.layoutPosition = function() {
	  var layoutSize = this.layout.size;
	  var style = {};
	  var isOriginLeft = this.layout._getOption('originLeft');
	  var isOriginTop = this.layout._getOption('originTop');

	  // x
	  var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';
	  var xProperty = isOriginLeft ? 'left' : 'right';
	  var xResetProperty = isOriginLeft ? 'right' : 'left';

	  var x = this.position.x + layoutSize[ xPadding ];
	  // set in percentage or pixels
	  style[ xProperty ] = this.getXValue( x );
	  // reset other property
	  style[ xResetProperty ] = '';

	  // y
	  var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';
	  var yProperty = isOriginTop ? 'top' : 'bottom';
	  var yResetProperty = isOriginTop ? 'bottom' : 'top';

	  var y = this.position.y + layoutSize[ yPadding ];
	  // set in percentage or pixels
	  style[ yProperty ] = this.getYValue( y );
	  // reset other property
	  style[ yResetProperty ] = '';

	  this.css( style );
	  this.emitEvent( 'layout', [ this ] );
	};

	proto.getXValue = function( x ) {
	  var isHorizontal = this.layout._getOption('horizontal');
	  return this.layout.options.percentPosition && !isHorizontal ?
	    ( ( x / this.layout.size.width ) * 100 ) + '%' : x + 'px';
	};

	proto.getYValue = function( y ) {
	  var isHorizontal = this.layout._getOption('horizontal');
	  return this.layout.options.percentPosition && isHorizontal ?
	    ( ( y / this.layout.size.height ) * 100 ) + '%' : y + 'px';
	};

	proto._transitionTo = function( x, y ) {
	  this.getPosition();
	  // get current x & y from top/left
	  var curX = this.position.x;
	  var curY = this.position.y;

	  var compareX = parseInt( x, 10 );
	  var compareY = parseInt( y, 10 );
	  var didNotMove = compareX === this.position.x && compareY === this.position.y;

	  // save end position
	  this.setPosition( x, y );

	  // if did not move and not transitioning, just go to layout
	  if ( didNotMove && !this.isTransitioning ) {
	    this.layoutPosition();
	    return;
	  }

	  var transX = x - curX;
	  var transY = y - curY;
	  var transitionStyle = {};
	  transitionStyle.transform = this.getTranslate( transX, transY );

	  this.transition({
	    to: transitionStyle,
	    onTransitionEnd: {
	      transform: this.layoutPosition
	    },
	    isCleaning: true
	  });
	};

	proto.getTranslate = function( x, y ) {
	  // flip cooridinates if origin on right or bottom
	  var isOriginLeft = this.layout._getOption('originLeft');
	  var isOriginTop = this.layout._getOption('originTop');
	  x = isOriginLeft ? x : -x;
	  y = isOriginTop ? y : -y;
	  return 'translate3d(' + x + 'px, ' + y + 'px, 0)';
	};

	// non transition + transform support
	proto.goTo = function( x, y ) {
	  this.setPosition( x, y );
	  this.layoutPosition();
	};

	proto.moveTo = proto._transitionTo;

	proto.setPosition = function( x, y ) {
	  this.position.x = parseInt( x, 10 );
	  this.position.y = parseInt( y, 10 );
	};

	// ----- transition ----- //

	/**
	 * @param {Object} style - CSS
	 * @param {Function} onTransitionEnd
	 */

	// non transition, just trigger callback
	proto._nonTransition = function( args ) {
	  this.css( args.to );
	  if ( args.isCleaning ) {
	    this._removeStyles( args.to );
	  }
	  for ( var prop in args.onTransitionEnd ) {
	    args.onTransitionEnd[ prop ].call( this );
	  }
	};

	/**
	 * proper transition
	 * @param {Object} args - arguments
	 *   @param {Object} to - style to transition to
	 *   @param {Object} from - style to start transition from
	 *   @param {Boolean} isCleaning - removes transition styles after transition
	 *   @param {Function} onTransitionEnd - callback
	 */
	proto.transition = function( args ) {
	  // redirect to nonTransition if no transition duration
	  if ( !parseFloat( this.layout.options.transitionDuration ) ) {
	    this._nonTransition( args );
	    return;
	  }

	  var _transition = this._transn;
	  // keep track of onTransitionEnd callback by css property
	  for ( var prop in args.onTransitionEnd ) {
	    _transition.onEnd[ prop ] = args.onTransitionEnd[ prop ];
	  }
	  // keep track of properties that are transitioning
	  for ( prop in args.to ) {
	    _transition.ingProperties[ prop ] = true;
	    // keep track of properties to clean up when transition is done
	    if ( args.isCleaning ) {
	      _transition.clean[ prop ] = true;
	    }
	  }

	  // set from styles
	  if ( args.from ) {
	    this.css( args.from );
	    // force redraw. http://blog.alexmaccaw.com/css-transitions
	    var h = this.element.offsetHeight;
	    // hack for JSHint to hush about unused var
	    h = null;
	  }
	  // enable transition
	  this.enableTransition( args.to );
	  // set styles that are transitioning
	  this.css( args.to );

	  this.isTransitioning = true;

	};

	// dash before all cap letters, including first for
	// WebkitTransform => -webkit-transform
	function toDashedAll( str ) {
	  return str.replace( /([A-Z])/g, function( $1 ) {
	    return '-' + $1.toLowerCase();
	  });
	}

	var transitionProps = 'opacity,' + toDashedAll( transformProperty );

	proto.enableTransition = function(/* style */) {
	  // HACK changing transitionProperty during a transition
	  // will cause transition to jump
	  if ( this.isTransitioning ) {
	    return;
	  }

	  // make `transition: foo, bar, baz` from style object
	  // HACK un-comment this when enableTransition can work
	  // while a transition is happening
	  // var transitionValues = [];
	  // for ( var prop in style ) {
	  //   // dash-ify camelCased properties like WebkitTransition
	  //   prop = vendorProperties[ prop ] || prop;
	  //   transitionValues.push( toDashedAll( prop ) );
	  // }
	  // munge number to millisecond, to match stagger
	  var duration = this.layout.options.transitionDuration;
	  duration = typeof duration == 'number' ? duration + 'ms' : duration;
	  // enable transition styles
	  this.css({
	    transitionProperty: transitionProps,
	    transitionDuration: duration,
	    transitionDelay: this.staggerDelay || 0
	  });
	  // listen for transition end event
	  this.element.addEventListener( transitionEndEvent, this, false );
	};

	// ----- events ----- //

	proto.onwebkitTransitionEnd = function( event ) {
	  this.ontransitionend( event );
	};

	proto.onotransitionend = function( event ) {
	  this.ontransitionend( event );
	};

	// properties that I munge to make my life easier
	var dashedVendorProperties = {
	  '-webkit-transform': 'transform'
	};

	proto.ontransitionend = function( event ) {
	  // disregard bubbled events from children
	  if ( event.target !== this.element ) {
	    return;
	  }
	  var _transition = this._transn;
	  // get property name of transitioned property, convert to prefix-free
	  var propertyName = dashedVendorProperties[ event.propertyName ] || event.propertyName;

	  // remove property that has completed transitioning
	  delete _transition.ingProperties[ propertyName ];
	  // check if any properties are still transitioning
	  if ( isEmptyObj( _transition.ingProperties ) ) {
	    // all properties have completed transitioning
	    this.disableTransition();
	  }
	  // clean style
	  if ( propertyName in _transition.clean ) {
	    // clean up style
	    this.element.style[ event.propertyName ] = '';
	    delete _transition.clean[ propertyName ];
	  }
	  // trigger onTransitionEnd callback
	  if ( propertyName in _transition.onEnd ) {
	    var onTransitionEnd = _transition.onEnd[ propertyName ];
	    onTransitionEnd.call( this );
	    delete _transition.onEnd[ propertyName ];
	  }

	  this.emitEvent( 'transitionEnd', [ this ] );
	};

	proto.disableTransition = function() {
	  this.removeTransitionStyles();
	  this.element.removeEventListener( transitionEndEvent, this, false );
	  this.isTransitioning = false;
	};

	/**
	 * removes style property from element
	 * @param {Object} style
	**/
	proto._removeStyles = function( style ) {
	  // clean up transition styles
	  var cleanStyle = {};
	  for ( var prop in style ) {
	    cleanStyle[ prop ] = '';
	  }
	  this.css( cleanStyle );
	};

	var cleanTransitionStyle = {
	  transitionProperty: '',
	  transitionDuration: '',
	  transitionDelay: ''
	};

	proto.removeTransitionStyles = function() {
	  // remove transition
	  this.css( cleanTransitionStyle );
	};

	// ----- stagger ----- //

	proto.stagger = function( delay ) {
	  delay = isNaN( delay ) ? 0 : delay;
	  this.staggerDelay = delay + 'ms';
	};

	// ----- show/hide/remove ----- //

	// remove element from DOM
	proto.removeElem = function() {
	  this.element.parentNode.removeChild( this.element );
	  // remove display: none
	  this.css({ display: '' });
	  this.emitEvent( 'remove', [ this ] );
	};

	proto.remove = function() {
	  // just remove element if no transition support or no transition
	  if ( !transitionProperty || !parseFloat( this.layout.options.transitionDuration ) ) {
	    this.removeElem();
	    return;
	  }

	  // start transition
	  this.once( 'transitionEnd', function() {
	    this.removeElem();
	  });
	  this.hide();
	};

	proto.reveal = function() {
	  delete this.isHidden;
	  // remove display: none
	  this.css({ display: '' });

	  var options = this.layout.options;

	  var onTransitionEnd = {};
	  var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');
	  onTransitionEnd[ transitionEndProperty ] = this.onRevealTransitionEnd;

	  this.transition({
	    from: options.hiddenStyle,
	    to: options.visibleStyle,
	    isCleaning: true,
	    onTransitionEnd: onTransitionEnd
	  });
	};

	proto.onRevealTransitionEnd = function() {
	  // check if still visible
	  // during transition, item may have been hidden
	  if ( !this.isHidden ) {
	    this.emitEvent('reveal');
	  }
	};

	/**
	 * get style property use for hide/reveal transition end
	 * @param {String} styleProperty - hiddenStyle/visibleStyle
	 * @returns {String}
	 */
	proto.getHideRevealTransitionEndProperty = function( styleProperty ) {
	  var optionStyle = this.layout.options[ styleProperty ];
	  // use opacity
	  if ( optionStyle.opacity ) {
	    return 'opacity';
	  }
	  // get first property
	  for ( var prop in optionStyle ) {
	    return prop;
	  }
	};

	proto.hide = function() {
	  // set flag
	  this.isHidden = true;
	  // remove display: none
	  this.css({ display: '' });

	  var options = this.layout.options;

	  var onTransitionEnd = {};
	  var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');
	  onTransitionEnd[ transitionEndProperty ] = this.onHideTransitionEnd;

	  this.transition({
	    from: options.visibleStyle,
	    to: options.hiddenStyle,
	    // keep hidden stuff hidden
	    isCleaning: true,
	    onTransitionEnd: onTransitionEnd
	  });
	};

	proto.onHideTransitionEnd = function() {
	  // check if still hidden
	  // during transition, item may have been un-hidden
	  if ( this.isHidden ) {
	    this.css({ display: 'none' });
	    this.emitEvent('hide');
	  }
	};

	proto.destroy = function() {
	  this.css({
	    position: '',
	    left: '',
	    right: '',
	    top: '',
	    bottom: '',
	    transition: '',
	    transform: ''
	  });
	};

	return Item;

	}));


/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * Isotope LayoutMode
	 */

	( function( window, factory ) {
	  // universal module definition
	  /* jshint strict: false */ /*globals define, module, require */
	  if ( true ) {
	    // AMD
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
	        __webpack_require__(3),
	        __webpack_require__(6)
	      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof module == 'object' && module.exports ) {
	    // CommonJS
	    module.exports = factory(
	      require('get-size'),
	      require('outlayer')
	    );
	  } else {
	    // browser global
	    window.Isotope = window.Isotope || {};
	    window.Isotope.LayoutMode = factory(
	      window.getSize,
	      window.Outlayer
	    );
	  }

	}( window, function factory( getSize, Outlayer ) {
	  'use strict';

	  // layout mode class
	  function LayoutMode( isotope ) {
	    this.isotope = isotope;
	    // link properties
	    if ( isotope ) {
	      this.options = isotope.options[ this.namespace ];
	      this.element = isotope.element;
	      this.items = isotope.filteredItems;
	      this.size = isotope.size;
	    }
	  }

	  var proto = LayoutMode.prototype;

	  /**
	   * some methods should just defer to default Outlayer method
	   * and reference the Isotope instance as `this`
	  **/
	  var facadeMethods = [
	    '_resetLayout',
	    '_getItemLayoutPosition',
	    '_manageStamp',
	    '_getContainerSize',
	    '_getElementOffset',
	    'needsResizeLayout',
	    '_getOption'
	  ];

	  facadeMethods.forEach( function( methodName ) {
	    proto[ methodName ] = function() {
	      return Outlayer.prototype[ methodName ].apply( this.isotope, arguments );
	    };
	  });

	  // -----  ----- //

	  // for horizontal layout modes, check vertical size
	  proto.needsVerticalResizeLayout = function() {
	    // don't trigger if size did not change
	    var size = getSize( this.isotope.element );
	    // check that this.size and size are there
	    // IE8 triggers resize on body size change, so they might not be
	    var hasSizes = this.isotope.size && size;
	    return hasSizes && size.innerHeight != this.isotope.size.innerHeight;
	  };

	  // ----- measurements ----- //

	  proto._getMeasurement = function() {
	    this.isotope._getMeasurement.apply( this, arguments );
	  };

	  proto.getColumnWidth = function() {
	    this.getSegmentSize( 'column', 'Width' );
	  };

	  proto.getRowHeight = function() {
	    this.getSegmentSize( 'row', 'Height' );
	  };

	  /**
	   * get columnWidth or rowHeight
	   * segment: 'column' or 'row'
	   * size 'Width' or 'Height'
	  **/
	  proto.getSegmentSize = function( segment, size ) {
	    var segmentName = segment + size;
	    var outerSize = 'outer' + size;
	    // columnWidth / outerWidth // rowHeight / outerHeight
	    this._getMeasurement( segmentName, outerSize );
	    // got rowHeight or columnWidth, we can chill
	    if ( this[ segmentName ] ) {
	      return;
	    }
	    // fall back to item of first element
	    var firstItemSize = this.getFirstItemSize();
	    this[ segmentName ] = firstItemSize && firstItemSize[ outerSize ] ||
	      // or size of container
	      this.isotope.size[ 'inner' + size ];
	  };

	  proto.getFirstItemSize = function() {
	    var firstItem = this.isotope.filteredItems[0];
	    return firstItem && firstItem.element && getSize( firstItem.element );
	  };

	  // ----- methods that should reference isotope ----- //

	  proto.layout = function() {
	    this.isotope.layout.apply( this.isotope, arguments );
	  };

	  proto.getSize = function() {
	    this.isotope.getSize();
	    this.size = this.isotope.size;
	  };

	  // -------------------------- create -------------------------- //

	  LayoutMode.modes = {};

	  LayoutMode.create = function( namespace, options ) {

	    function Mode() {
	      LayoutMode.apply( this, arguments );
	    }

	    Mode.prototype = Object.create( proto );
	    Mode.prototype.constructor = Mode;

	    // default options
	    if ( options ) {
	      Mode.options = options;
	    }

	    Mode.prototype.namespace = namespace;
	    // register in Isotope
	    LayoutMode.modes[ namespace ] = Mode;

	    return Mode;
	  };

	  return LayoutMode;

	}));


/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * Masonry layout mode
	 * sub-classes Masonry
	 * http://masonry.desandro.com
	 */

	( function( window, factory ) {
	  // universal module definition
	  /* jshint strict: false */ /*globals define, module, require */
	  if ( true ) {
	    // AMD
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
	        __webpack_require__(9),
	        __webpack_require__(11)
	      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof module == 'object' && module.exports ) {
	    // CommonJS
	    module.exports = factory(
	      require('../layout-mode'),
	      require('masonry-layout')
	    );
	  } else {
	    // browser global
	    factory(
	      window.Isotope.LayoutMode,
	      window.Masonry
	    );
	  }

	}( window, function factory( LayoutMode, Masonry ) {
	'use strict';

	// -------------------------- masonryDefinition -------------------------- //

	  // create an Outlayer layout class
	  var MasonryMode = LayoutMode.create('masonry');

	  var proto = MasonryMode.prototype;

	  var keepModeMethods = {
	    _getElementOffset: true,
	    layout: true,
	    _getMeasurement: true
	  };

	  // inherit Masonry prototype
	  for ( var method in Masonry.prototype ) {
	    // do not inherit mode methods
	    if ( !keepModeMethods[ method ] ) {
	      proto[ method ] = Masonry.prototype[ method ];
	    }
	  }

	  var measureColumns = proto.measureColumns;
	  proto.measureColumns = function() {
	    // set items, used if measuring first item
	    this.items = this.isotope.filteredItems;
	    measureColumns.call( this );
	  };

	  // point to mode options for fitWidth
	  var _getOption = proto._getOption;
	  proto._getOption = function( option ) {
	    if ( option == 'fitWidth' ) {
	      return this.options.isFitWidth !== undefined ?
	        this.options.isFitWidth : this.options.fitWidth;
	    }
	    return _getOption.apply( this.isotope, arguments );
	  };

	  return MasonryMode;

	}));


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * Masonry v4.2.0
	 * Cascading grid layout library
	 * http://masonry.desandro.com
	 * MIT License
	 * by David DeSandro
	 */

	( function( window, factory ) {
	  // universal module definition
	  /* jshint strict: false */ /*globals define, module, require */
	  if ( true ) {
	    // AMD
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
	        __webpack_require__(6),
	        __webpack_require__(3)
	      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof module == 'object' && module.exports ) {
	    // CommonJS
	    module.exports = factory(
	      require('outlayer'),
	      require('get-size')
	    );
	  } else {
	    // browser global
	    window.Masonry = factory(
	      window.Outlayer,
	      window.getSize
	    );
	  }

	}( window, function factory( Outlayer, getSize ) {

	'use strict';

	// -------------------------- masonryDefinition -------------------------- //

	  // create an Outlayer layout class
	  var Masonry = Outlayer.create('masonry');
	  // isFitWidth -> fitWidth
	  Masonry.compatOptions.fitWidth = 'isFitWidth';

	  var proto = Masonry.prototype;

	  proto._resetLayout = function() {
	    this.getSize();
	    this._getMeasurement( 'columnWidth', 'outerWidth' );
	    this._getMeasurement( 'gutter', 'outerWidth' );
	    this.measureColumns();

	    // reset column Y
	    this.colYs = [];
	    for ( var i=0; i < this.cols; i++ ) {
	      this.colYs.push( 0 );
	    }

	    this.maxY = 0;
	    this.horizontalColIndex = 0;
	  };

	  proto.measureColumns = function() {
	    this.getContainerWidth();
	    // if columnWidth is 0, default to outerWidth of first item
	    if ( !this.columnWidth ) {
	      var firstItem = this.items[0];
	      var firstItemElem = firstItem && firstItem.element;
	      // columnWidth fall back to item of first element
	      this.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||
	        // if first elem has no width, default to size of container
	        this.containerWidth;
	    }

	    var columnWidth = this.columnWidth += this.gutter;

	    // calculate columns
	    var containerWidth = this.containerWidth + this.gutter;
	    var cols = containerWidth / columnWidth;
	    // fix rounding errors, typically with gutters
	    var excess = columnWidth - containerWidth % columnWidth;
	    // if overshoot is less than a pixel, round up, otherwise floor it
	    var mathMethod = excess && excess < 1 ? 'round' : 'floor';
	    cols = Math[ mathMethod ]( cols );
	    this.cols = Math.max( cols, 1 );
	  };

	  proto.getContainerWidth = function() {
	    // container is parent if fit width
	    var isFitWidth = this._getOption('fitWidth');
	    var container = isFitWidth ? this.element.parentNode : this.element;
	    // check that this.size and size are there
	    // IE8 triggers resize on body size change, so they might not be
	    var size = getSize( container );
	    this.containerWidth = size && size.innerWidth;
	  };

	  proto._getItemLayoutPosition = function( item ) {
	    item.getSize();
	    // how many columns does this brick span
	    var remainder = item.size.outerWidth % this.columnWidth;
	    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';
	    // round if off by 1 pixel, otherwise use ceil
	    var colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );
	    colSpan = Math.min( colSpan, this.cols );
	    // use horizontal or top column position
	    var colPosMethod = this.options.horizontalOrder ?
	      '_getHorizontalColPosition' : '_getTopColPosition';
	    var colPosition = this[ colPosMethod ]( colSpan, item );
	    // position the brick
	    var position = {
	      x: this.columnWidth * colPosition.col,
	      y: colPosition.y
	    };
	    // apply setHeight to necessary columns
	    var setHeight = colPosition.y + item.size.outerHeight;
	    var setMax = colSpan + colPosition.col;
	    for ( var i = colPosition.col; i < setMax; i++ ) {
	      this.colYs[i] = setHeight;
	    }

	    return position;
	  };

	  proto._getTopColPosition = function( colSpan ) {
	    var colGroup = this._getTopColGroup( colSpan );
	    // get the minimum Y value from the columns
	    var minimumY = Math.min.apply( Math, colGroup );

	    return {
	      col: colGroup.indexOf( minimumY ),
	      y: minimumY,
	    };
	  };

	  /**
	   * @param {Number} colSpan - number of columns the element spans
	   * @returns {Array} colGroup
	   */
	  proto._getTopColGroup = function( colSpan ) {
	    if ( colSpan < 2 ) {
	      // if brick spans only one column, use all the column Ys
	      return this.colYs;
	    }

	    var colGroup = [];
	    // how many different places could this brick fit horizontally
	    var groupCount = this.cols + 1 - colSpan;
	    // for each group potential horizontal position
	    for ( var i = 0; i < groupCount; i++ ) {
	      colGroup[i] = this._getColGroupY( i, colSpan );
	    }
	    return colGroup;
	  };

	  proto._getColGroupY = function( col, colSpan ) {
	    if ( colSpan < 2 ) {
	      return this.colYs[ col ];
	    }
	    // make an array of colY values for that one group
	    var groupColYs = this.colYs.slice( col, col + colSpan );
	    // and get the max value of the array
	    return Math.max.apply( Math, groupColYs );
	  };

	  // get column position based on horizontal index. #873
	  proto._getHorizontalColPosition = function( colSpan, item ) {
	    var col = this.horizontalColIndex % this.cols;
	    var isOver = colSpan > 1 && col + colSpan > this.cols;
	    // shift to next row if item can't fit on current row
	    col = isOver ? 0 : col;
	    // don't let zero-size items take up space
	    var hasSize = item.size.outerWidth && item.size.outerHeight;
	    this.horizontalColIndex = hasSize ? col + colSpan : this.horizontalColIndex;

	    return {
	      col: col,
	      y: this._getColGroupY( col, colSpan ),
	    };
	  };

	  proto._manageStamp = function( stamp ) {
	    var stampSize = getSize( stamp );
	    var offset = this._getElementOffset( stamp );
	    // get the columns that this stamp affects
	    var isOriginLeft = this._getOption('originLeft');
	    var firstX = isOriginLeft ? offset.left : offset.right;
	    var lastX = firstX + stampSize.outerWidth;
	    var firstCol = Math.floor( firstX / this.columnWidth );
	    firstCol = Math.max( 0, firstCol );
	    var lastCol = Math.floor( lastX / this.columnWidth );
	    // lastCol should not go over if multiple of columnWidth #425
	    lastCol -= lastX % this.columnWidth ? 0 : 1;
	    lastCol = Math.min( this.cols - 1, lastCol );
	    // set colYs to bottom of the stamp

	    var isOriginTop = this._getOption('originTop');
	    var stampMaxY = ( isOriginTop ? offset.top : offset.bottom ) +
	      stampSize.outerHeight;
	    for ( var i = firstCol; i <= lastCol; i++ ) {
	      this.colYs[i] = Math.max( stampMaxY, this.colYs[i] );
	    }
	  };

	  proto._getContainerSize = function() {
	    this.maxY = Math.max.apply( Math, this.colYs );
	    var size = {
	      height: this.maxY
	    };

	    if ( this._getOption('fitWidth') ) {
	      size.width = this._getContainerFitWidth();
	    }

	    return size;
	  };

	  proto._getContainerFitWidth = function() {
	    var unusedCols = 0;
	    // count unused columns
	    var i = this.cols;
	    while ( --i ) {
	      if ( this.colYs[i] !== 0 ) {
	        break;
	      }
	      unusedCols++;
	    }
	    // fit container to columns that have been used
	    return ( this.cols - unusedCols ) * this.columnWidth - this.gutter;
	  };

	  proto.needsResizeLayout = function() {
	    var previousWidth = this.containerWidth;
	    this.getContainerWidth();
	    return previousWidth != this.containerWidth;
	  };

	  return Masonry;

	}));


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * fitRows layout mode
	 */

	( function( window, factory ) {
	  // universal module definition
	  /* jshint strict: false */ /*globals define, module, require */
	  if ( true ) {
	    // AMD
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
	        __webpack_require__(9)
	      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof exports == 'object' ) {
	    // CommonJS
	    module.exports = factory(
	      require('../layout-mode')
	    );
	  } else {
	    // browser global
	    factory(
	      window.Isotope.LayoutMode
	    );
	  }

	}( window, function factory( LayoutMode ) {
	'use strict';

	var FitRows = LayoutMode.create('fitRows');

	var proto = FitRows.prototype;

	proto._resetLayout = function() {
	  this.x = 0;
	  this.y = 0;
	  this.maxY = 0;
	  this._getMeasurement( 'gutter', 'outerWidth' );
	};

	proto._getItemLayoutPosition = function( item ) {
	  item.getSize();

	  var itemWidth = item.size.outerWidth + this.gutter;
	  // if this element cannot fit in the current row
	  var containerWidth = this.isotope.size.innerWidth + this.gutter;
	  if ( this.x !== 0 && itemWidth + this.x > containerWidth ) {
	    this.x = 0;
	    this.y = this.maxY;
	  }

	  var position = {
	    x: this.x,
	    y: this.y
	  };

	  this.maxY = Math.max( this.maxY, this.y + item.size.outerHeight );
	  this.x += itemWidth;

	  return position;
	};

	proto._getContainerSize = function() {
	  return { height: this.maxY };
	};

	return FitRows;

	}));


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * vertical layout mode
	 */

	( function( window, factory ) {
	  // universal module definition
	  /* jshint strict: false */ /*globals define, module, require */
	  if ( true ) {
	    // AMD
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
	        __webpack_require__(9)
	      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof module == 'object' && module.exports ) {
	    // CommonJS
	    module.exports = factory(
	      require('../layout-mode')
	    );
	  } else {
	    // browser global
	    factory(
	      window.Isotope.LayoutMode
	    );
	  }

	}( window, function factory( LayoutMode ) {
	'use strict';

	var Vertical = LayoutMode.create( 'vertical', {
	  horizontalAlignment: 0
	});

	var proto = Vertical.prototype;

	proto._resetLayout = function() {
	  this.y = 0;
	};

	proto._getItemLayoutPosition = function( item ) {
	  item.getSize();
	  var x = ( this.isotope.size.innerWidth - item.size.outerWidth ) *
	    this.options.horizontalAlignment;
	  var y = this.y;
	  this.y += item.size.outerHeight;
	  return { x: x, y: y };
	};

	proto._getContainerSize = function() {
	  return { height: this.y };
	};

	return Vertical;

	}));


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * Isotope Item
	**/

	( function( window, factory ) {
	  // universal module definition
	  /* jshint strict: false */ /*globals define, module, require */
	  if ( true ) {
	    // AMD
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
	        __webpack_require__(6)
	      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof module == 'object' && module.exports ) {
	    // CommonJS
	    module.exports = factory(
	      require('outlayer')
	    );
	  } else {
	    // browser global
	    window.Isotope = window.Isotope || {};
	    window.Isotope.Item = factory(
	      window.Outlayer
	    );
	  }

	}( window, function factory( Outlayer ) {
	'use strict';

	// -------------------------- Item -------------------------- //

	// sub-class Outlayer Item
	function Item() {
	  Outlayer.Item.apply( this, arguments );
	}

	var proto = Item.prototype = Object.create( Outlayer.Item.prototype );

	var _create = proto._create;
	proto._create = function() {
	  // assign id, used for original-order sorting
	  this.id = this.layout.itemGUID++;
	  _create.call( this );
	  this.sortData = {};
	};

	proto.updateSortData = function() {
	  if ( this.isIgnored ) {
	    return;
	  }
	  // default sorters
	  this.sortData.id = this.id;
	  // for backward compatibility
	  this.sortData['original-order'] = this.id;
	  this.sortData.random = Math.random();
	  // go thru getSortData obj and apply the sorters
	  var getSortData = this.layout.options.getSortData;
	  var sorters = this.layout._sorters;
	  for ( var key in getSortData ) {
	    var sorter = sorters[ key ];
	    this.sortData[ key ] = sorter( this.element, this );
	  }
	};

	var _destroy = proto.destroy;
	proto.destroy = function() {
	  // call super
	  _destroy.apply( this, arguments );
	  // reset display, #741
	  this.css({
	    display: ''
	  });
	};

	return Item;

	}));


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	
	var rgbToHsl = __webpack_require__(16);
	var hexToRgb = __webpack_require__(17);

	module.exports = function (hex) {
		var hsl = rgbToHsl.apply(rgbToHsl, hexToRgb(hex));
		return [hsl[0], parseInt(hsl[1], 10), parseInt(hsl[2], 10)];
	};


/***/ },
/* 16 */
/***/ function(module, exports) {

	(function() {
	  module.exports = function(r, g, b) {
	    var d, h, l, max, min, s;
	    r /= 255;
	    g /= 255;
	    b /= 255;
	    max = Math.max(r, g, b);
	    min = Math.min(r, g, b);
	    h = 0;
	    s = 0;
	    l = (max + min) / 2;
	    if (max === min) {
	      h = s = 0;
	    } else {
	      d = max - min;
	      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
	      switch (max) {
	        case r:
	          h = (g - b) / d + (g < b ? 6 : 0);
	          break;
	        case g:
	          h = (b - r) / d + 2;
	          break;
	        case b:
	          h = (r - g) / d + 4;
	      }
	      h /= 6;
	    }
	    h = Math.ceil(h * 360);
	    s = (Math.ceil(s * 100)) + "%";
	    l = (Math.ceil(l * 100)) + "%";
	    return [h, s, l];
	  };

	}).call(this);


/***/ },
/* 17 */
/***/ function(module, exports) {

	module.exports = function hexToRgb (hex) {

	  if (hex.charAt && hex.charAt(0) === '#') {
	    hex = removeHash(hex)
	  }

	  if (hex.length === 3) {
	    hex = expand(hex)
	  }

	  var bigint = parseInt(hex, 16)
	  var r = (bigint >> 16) & 255
	  var g = (bigint >> 8) & 255
	  var b = bigint & 255

	  return [r, g, b]
	}

	function removeHash (hex) {

	  var arr = hex.split('')
	  arr.shift()
	  return arr.join('')
	}

	function expand (hex) {

	  return hex
	    .split('')
	    .reduce(function (accum, value) {

	      return accum.concat([value, value])
	    }, [])
	    .join('')
	}


/***/ }
/******/ ]);